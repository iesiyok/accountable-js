{"version":3,"sources":["sources://./node_modules/@nimiq/ledger-api/dist/high-level-api/lazy-chunk-request-with-key-path-nimiq.es.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAqE;AACY;;AAEjF,sCAAsC,iEAAY;AAClD,oEAAoE;AACpE;AACA;AACA;AACA,gBAAgB,wEAAc,mBAAmB,sDAAI;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAU,CAAC,2DAAS,8CAA8C,QAAQ,IAAI,eAAe;AACnH;AACA;AACA;;AAEwC;AACxC","file":"js/12-legacy.js","sourcesContent":["import { R as RequestNimiq } from './lazy-chunk-request-nimiq.es.js';\nimport { parseBip32Path, Coin, ErrorState, ErrorType } from './ledger-api.es.js';\n\nclass RequestWithKeyPathNimiq extends RequestNimiq {\n    constructor(keyPath, expectedWalletId, childClassProperties = {}) {\n        super(expectedWalletId);\n        this.keyPath = keyPath;\n        try {\n            if (parseBip32Path(keyPath).coin !== Coin.NIMIQ)\n                throw new Error('Not a Nimiq bip32 path');\n        }\n        catch (e) {\n            // Set properties of child class such that these are present on the request in the thrown error state.\n            for (const [key, value] of Object.entries(childClassProperties)) {\n                this[key] = value;\n            }\n            throw new ErrorState(ErrorType.REQUEST_ASSERTION_FAILED, `Invalid keyPath ${keyPath}: ${e.message || e}`, this);\n        }\n    }\n}\n\nexport { RequestWithKeyPathNimiq as R };\n//# sourceMappingURL=lazy-chunk-request-with-key-path-nimiq.es.js.map\n"],"sourceRoot":""}