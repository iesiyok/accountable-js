{"version":3,"sources":["sources://./node_modules/@nimiq/ledger-api/dist/high-level-api/lazy-chunk-request-get-wallet-id-nimiq.es.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAqE;AACf;AAClB;;AAEpC,sCAAsC,iEAAY;AAClD;AACA;AACA;AACA,oBAAoB,kEAAgB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,sFAAuB,EAAC;AACvC","file":"js/34-legacy.js","sourcesContent":["import { R as RequestNimiq } from './lazy-chunk-request-nimiq.es.js';\nimport { RequestTypeNimiq } from './ledger-api.es.js';\nimport './lazy-chunk-request.es.js';\n\nclass RequestGetWalletIdNimiq extends RequestNimiq {\n    constructor() {\n        // public constructor calling the parent protected constructor\n        super();\n        this.type = RequestTypeNimiq.GET_WALLET_ID;\n        this._coinAppConnection = null;\n    }\n    async call(transport) {\n        this._coinAppConnection = this._coinAppConnection || await this.checkCoinAppConnection(transport);\n        return this._coinAppConnection.walletId;\n    }\n    async checkCoinAppConnection(transport) {\n        this._coinAppConnection = await super.checkCoinAppConnection(transport);\n        return this._coinAppConnection;\n    }\n    canReuseCoinAppConnection(coinAppConnection) {\n        const canReuseCoinAppConnection = super.canReuseCoinAppConnection(coinAppConnection)\n            && !!coinAppConnection.walletId;\n        if (canReuseCoinAppConnection) {\n            // Use the provided coin app connection which includes the wallet id such that checkCoinAppConnection\n            // doesn't have to be called anymore to determine the wallet id.\n            this._coinAppConnection = coinAppConnection;\n        }\n        return canReuseCoinAppConnection;\n    }\n    get _isWalletIdDerivationRequired() {\n        return true;\n    }\n}\n\nexport default RequestGetWalletIdNimiq;\n//# sourceMappingURL=lazy-chunk-request-get-wallet-id-nimiq.es.js.map\n"],"sourceRoot":""}