{"version":3,"sources":["sources://./src/views/RefundSwap.vue","sources://./src/views/RefundSwapSuccess.vue","webpack-generated:///./src/views/RefundSwapSuccess.vue?9891","webpack-generated:///./src/views/RefundSwap.vue?f691","webpack:///./src/views/RefundSwap.vue?e8b4","webpack-generated:///./src/views/RefundSwapSuccess.vue?a794","webpack:///./src/views/RefundSwapSuccess.vue?8343","webpack-generated:///./src/views/RefundSwapSuccess.vue?1c1d"],"names":[],"mappings":"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","file":"js/swap.js","sourcesContent":["\nimport { Component } from 'vue-property-decorator';\nimport { Getter } from 'vuex-class';\nimport { SmallPage } from '@nimiq/vue-components';\nimport BitcoinSyncBaseView from './BitcoinSyncBaseView.vue';\nimport { BitcoinTransactionInputType } from '@nimiq/keyguard-client';\nimport StatusScreen from '../components/StatusScreen.vue';\nimport GlobalClose from '../components/GlobalClose.vue';\nimport { RequestType } from '../lib/PublicRequestTypes';\nimport {\n    ParsedRefundSwapRequest,\n    ParsedSignTransactionRequest,\n    ParsedSignBtcTransactionRequest,\n} from '../lib/RequestTypes';\nimport { Static } from '../lib/StaticStore';\nimport { WalletInfo } from '../lib/WalletInfo';\nimport { SwapAsset } from '@nimiq/fastspot-api';\n\n// Import only types to avoid bundling of KeyguardClient in Ledger request if not required.\n// (But note that currently, the KeyguardClient is still always bundled in the RpcApi).\ntype KeyguardSignNimTransactionRequest = import('@nimiq/keyguard-client').SignTransactionRequestStandard;\ntype KeyguardSignBtcTransactionRequest = import('@nimiq/keyguard-client').SignBtcTransactionRequestStandard;\n\n@Component({components: {StatusScreen, SmallPage, GlobalClose}}) // including components used in parent class\nexport default class RefundSwap extends BitcoinSyncBaseView {\n    // Can be ParsedSignTransactionRequest or ParsedSignBtcTransactionRequest in RefundSwapLedger after returning from\n    // signing via a ParsedSignTransactionRequest or ParsedSignBtcTransactionRequest.\n    @Static protected request!: ParsedRefundSwapRequest | ParsedSignTransactionRequest\n        | ParsedSignBtcTransactionRequest;\n    @Getter private findWallet!: (id: string) => WalletInfo | undefined;\n\n    protected async created() {\n        if (this.request.kind !== RequestType.REFUND_SWAP) {\n            // can happen for RefundSwapLedger and is handled there\n            return;\n        }\n\n        const request = this.request as ParsedRefundSwapRequest;\n\n        const refundInfo = request.refund;\n        const account = this.findWallet(request.walletId)!; // existence checked in RpcApi\n\n        if (refundInfo.type === SwapAsset.NIM) {\n            const { sender, recipient, value, fee, extraData: data, validityStartHeight } = refundInfo;\n            const signer = account.findSignerForAddress(recipient);\n\n            if (!signer) {\n                this.$rpc.reject(new Error(`Unknown recipient ${refundInfo.recipient}`));\n                return;\n            }\n\n            const signRequest: KeyguardSignNimTransactionRequest = {\n                appName: request.appName,\n\n                keyId: account.keyId,\n                keyLabel: account.labelForKeyguard,\n\n                keyPath: signer.path,\n                sender: sender.serialize(), // HTLC address\n                senderType: Nimiq.Account.Type.HTLC,\n                senderLabel: 'Swap HTLC',\n                // My address, must be refund address of HTLC. Send to signer as recipient might be a contract.\n                recipient: signer.address.serialize(),\n                recipientLabel: signer.label,\n                value, // Luna\n                fee, // Luna\n                data,\n                validityStartHeight,\n            };\n\n            this._signTransaction(signRequest);\n        }\n\n        if (refundInfo.type === SwapAsset.BTC) {\n            let signerKeyPath: string;\n            try {\n                // Note that the sync state will only be visible in UI if the sync is not instant (if we actually sync)\n                this.state = this.State.SYNCING;\n\n                let didDeriveAddresses = false;\n                let addressInfo = account.findBtcAddressInfo(refundInfo.refundAddress);\n                if (addressInfo instanceof Promise) {\n                    didDeriveAddresses = true;\n                    addressInfo = await addressInfo;\n                }\n                if (!addressInfo) {\n                    this.$rpc.reject(new Error(`Refund address not found: ${refundInfo.refundAddress}`));\n                    return;\n                }\n                signerKeyPath = addressInfo.path;\n\n                if (!await account.findBtcAddressInfo(refundInfo.output.address, !didDeriveAddresses)) {\n                    this.$rpc.reject(new Error(`Output address not found: ${refundInfo.output.address}`));\n                    return;\n                }\n\n                this.state = this.State.NONE;\n            } catch (e) {\n                this.state = this.State.SYNCING_FAILED;\n                this.error = e.message || e;\n                return;\n            }\n\n            const signRequest: KeyguardSignBtcTransactionRequest = {\n                appName: request.appName,\n\n                keyId: account.keyId,\n                keyLabel: account.labelForKeyguard,\n\n                inputs: [{\n                    ...refundInfo.input,\n                    keyPath: signerKeyPath,\n                    type: BitcoinTransactionInputType.HTLC_REFUND,\n                }],\n                recipientOutput: {\n                    ...refundInfo.output,\n                    label: account.label,\n                },\n            };\n\n            this._signTransaction(signRequest);\n        }\n    }\n\n    protected _signTransaction(request: KeyguardSignNimTransactionRequest | KeyguardSignBtcTransactionRequest) {\n        // Note that this method gets overwritten in RefundSwapLedger\n        const client = this.$rpc.createKeyguardClient(true);\n        if ('sender' in request) {\n            // Nimiq request\n            client.signTransaction(request);\n        } else {\n            // Bitcoin request\n            client.signBtcTransaction(request);\n        }\n    }\n}\n","\n\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport { State } from 'vuex-class';\nimport KeyguardClient from '@nimiq/keyguard-client';\nimport { SwapAsset } from '@nimiq/fastspot-api';\nimport Network from '../components/Network.vue';\nimport { ParsedRefundSwapRequest } from '../lib/RequestTypes';\nimport { SignedBtcTransaction, SignedTransaction } from '../lib/PublicRequestTypes';\nimport { Static } from '../lib/StaticStore';\nimport patchMerkleTree from '../lib/MerkleTreePatch';\n\n@Component({components: {Network}})\nexport default class SignBtcTransactionSuccess extends Vue {\n    @Static private request!: ParsedRefundSwapRequest;\n    @State private keyguardResult!: KeyguardClient.SignedBitcoinTransaction | KeyguardClient.SignatureResult;\n\n    private async mounted() {\n        if ('signature' in this.keyguardResult && this.request.refund.type === SwapAsset.NIM) {\n            const tx = await (this.$refs.network as Network).createTx(Object.assign({\n                signerPubKey: this.keyguardResult.publicKey,\n            }, this.keyguardResult, this.request.refund, {\n                senderType: Nimiq.Account.Type.HTLC,\n            }));\n\n            const proof = new Nimiq.SerialBuffer(1 + tx.proof.length);\n            proof.writeUint8(Nimiq.HashedTimeLockedContract.ProofType.TIMEOUT_RESOLVE);\n            proof.write(new Nimiq.SerialBuffer(tx.proof)); // Current tx.proof is a regular SignatureProof\n            tx.proof = proof;\n\n            // Validate that the transaction is valid\n            patchMerkleTree();\n            if (!tx.verify()) {\n                this.$rpc.reject(new Error('NIM transaction is invalid'));\n                return;\n            }\n\n            const result: SignedTransaction = await (this.$refs.network as Network).makeSignTransactionResult(tx);\n\n            this.$rpc.resolve(result);\n        }\n\n        if ('transactionHash' in this.keyguardResult) {\n            const result: SignedBtcTransaction = {\n                serializedTx: this.keyguardResult.raw,\n                hash: this.keyguardResult.transactionHash,\n            };\n\n            this.$rpc.resolve(result);\n        }\n    }\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"Network\", { ref: \"network\", attrs: { visible: false } })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render, staticRenderFns\nimport script from \"./RefundSwap.vue?vue&type=script&lang=ts&\"\nexport * from \"./RefundSwap.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/iesiyok/projects/acc-js/development/nimiq2/hub/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3d34e536')) {\n      api.createRecord('3d34e536', component.options)\n    } else {\n      api.reload('3d34e536', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/views/RefundSwap.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/ts-loader/index.js??ref--12-1!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwap.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/ts-loader/index.js??ref--12-1!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwap.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./RefundSwapSuccess.vue?vue&type=template&id=9b8e94e4&\"\nimport script from \"./RefundSwapSuccess.vue?vue&type=script&lang=ts&\"\nexport * from \"./RefundSwapSuccess.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/iesiyok/projects/acc-js/development/nimiq2/hub/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('9b8e94e4')) {\n      api.createRecord('9b8e94e4', component.options)\n    } else {\n      api.reload('9b8e94e4', component.options)\n    }\n    module.hot.accept(\"./RefundSwapSuccess.vue?vue&type=template&id=9b8e94e4&\", function () {\n      api.rerender('9b8e94e4', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/RefundSwapSuccess.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/ts-loader/index.js??ref--12-1!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapSuccess.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/ts-loader/index.js??ref--12-1!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapSuccess.vue?vue&type=script&lang=ts&\"","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"3e5283d1-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapSuccess.vue?vue&type=template&id=9b8e94e4&\""],"sourceRoot":""}