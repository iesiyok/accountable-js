{"version":3,"sources":["sources://./node_modules/@nimiq/ledger-api/dist/high-level-api/lazy-chunk-request-get-address-nimiq.es.js","sources://./node_modules/@nimiq/ledger-api/dist/high-level-api/lazy-chunk-request-with-key-path-nimiq.es.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8F;AACjB;AACnC;AACN;;AAEpC,qCAAqC,+EAAuB;AAC5D;AACA,qBAAqB,kEAAgB;AACrC,0CAA0C,iCAAiC;AAC3E;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,eAAe,UAAU;AACzB;AACA;AACA;AACA;AACA,sBAAsB,4DAAU,CAAC,2DAAS;AAC1C;AACA;AACA;AACA;;AAEe,qFAAsB,EAAC;AACtC;;;;;;;;;;;;;AC3BA;AAAA;AAAA;AAAA;AAAqE;AACY;;AAEjF,sCAAsC,iEAAY;AAClD,oEAAoE;AACpE;AACA;AACA;AACA,gBAAgB,wEAAc,mBAAmB,sDAAI;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,4DAAU,CAAC,2DAAS,8CAA8C,QAAQ,IAAI,eAAe;AACnH;AACA;AACA;;AAEwC;AACxC","file":"js/22.js","sourcesContent":["import { R as RequestWithKeyPathNimiq } from './lazy-chunk-request-with-key-path-nimiq.es.js';\nimport { RequestTypeNimiq, ErrorState, ErrorType } from './ledger-api.es.js';\nimport './lazy-chunk-request-nimiq.es.js';\nimport './lazy-chunk-request.es.js';\n\nclass RequestGetAddressNimiq extends RequestWithKeyPathNimiq {\n    constructor(keyPath, display, expectedAddress, expectedWalletId) {\n        const type = RequestTypeNimiq.GET_ADDRESS;\n        super(keyPath, expectedWalletId, { type, display, expectedAddress });\n        this.type = type;\n        this.display = display;\n        this.expectedAddress = expectedAddress;\n    }\n    async call(transport) {\n        const api = await this._getLowLevelApi(transport); // throws LOADING_DEPENDENCIES_FAILED on failure\n        const { address } = await api.getAddress(this.keyPath, true, // validate\n        !!this.display);\n        if (this.expectedAddress\n            && this.expectedAddress.replace(/ /g, '').toUpperCase()\n                !== address.replace(/ /g, '').toUpperCase()) {\n            throw new ErrorState(ErrorType.REQUEST_ASSERTION_FAILED, 'Address mismatch', this);\n        }\n        return address;\n    }\n}\n\nexport default RequestGetAddressNimiq;\n//# sourceMappingURL=lazy-chunk-request-get-address-nimiq.es.js.map\n","import { R as RequestNimiq } from './lazy-chunk-request-nimiq.es.js';\nimport { parseBip32Path, Coin, ErrorState, ErrorType } from './ledger-api.es.js';\n\nclass RequestWithKeyPathNimiq extends RequestNimiq {\n    constructor(keyPath, expectedWalletId, childClassProperties = {}) {\n        super(expectedWalletId);\n        this.keyPath = keyPath;\n        try {\n            if (parseBip32Path(keyPath).coin !== Coin.NIMIQ)\n                throw new Error('Not a Nimiq bip32 path');\n        }\n        catch (e) {\n            // Set properties of child class such that these are present on the request in the thrown error state.\n            for (const [key, value] of Object.entries(childClassProperties)) {\n                this[key] = value;\n            }\n            throw new ErrorState(ErrorType.REQUEST_ASSERTION_FAILED, `Invalid keyPath ${keyPath}: ${e.message || e}`, this);\n        }\n    }\n}\n\nexport { RequestWithKeyPathNimiq as R };\n//# sourceMappingURL=lazy-chunk-request-with-key-path-nimiq.es.js.map\n"],"sourceRoot":""}