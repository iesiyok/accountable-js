{"version":3,"sources":["sources://./node_modules/@nimiq/ledger-api/dist/high-level-api/lazy-chunk-TransportWebHID.es.js","sources://./node_modules/@nimiq/ledger-api/dist/high-level-api/lazy-chunk-hid-framing.es.js","sources://./node_modules/@nimiq/ledger-api/dist/high-level-api/lazy-chunk-index.es2.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAmF;AACwG;AAC1H;AAC6B;AAC3D;AACU;AACV;AACe;;AAElD;AACA,YAAY,0DAAiB;AAC7B,CAAC;;AAED,6CAA6C,wEAAM,cAAc,wEAAM;;AAEvE;AACA;AACA;AACA;AACA,GAAG;AACH,sBAAsB,yDAAc;AACpC;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA,4CAA4C,0DAAiB;AAC7D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,8BAA8B,yDAAS;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;;AAEA;AACA,qBAAqB,wEAAM;;AAE3B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM,iEAAG;AACT,sBAAsB,uEAAU,sBAAsB;;AAEtD;;AAEA,qBAAqB,mBAAmB;AACxC;AACA,OAAO;;;AAGP;AACA;;AAEA;AACA;AACA;AACA;;AAEA,MAAM,iEAAG;AACT;AACA,KAAK;AACL;AACA;;AAEA,kBAAkB,yDAAiC;AACnD;;AAEA;AACA,KAAK;;AAEL;AACA,uBAAuB,kEAAoB;AAC3C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,sCAAsC,yDAAkB;AACxD;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,yBAAyB,yDAA0B;AACnD,KAAK;AACL,0BAA0B,kEAAoB;AAC9C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,GAAG;AACH,uBAAuB,yDAA0B;AACjD,GAAG;;AAEH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,8EAAe,EAAC;AAC/B;;;;;;;;;;;;;AC1NA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsE;AACwC;AAC5E;AACuB;;AAEzD,iBAAiB,2EAAoB;;AAErC;AACA;AACA,CAAC;AACD;;;;AAIA;;AAEA;AACA,YAAY,wEAAM;AAClB;AACA;AACA;;AAEA;AACA,QAAQ,wEAAM;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,wEAAM;AACvB;AACA;AACA,aAAa,wEAAM;AACnB,MAAM,wEAAM;AACZ;;AAEA,qBAAqB,cAAc;AACnC,qBAAqB,wEAAM;AAC3B;AACA;AACA;AACA;AACA,oBAAoB,wEAAM;AAC1B;;AAEA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;;AAEP;AACA,kBAAkB,0DAAO;AACzB;;AAEA;AACA,kBAAkB,0DAAO;AACzB;;AAEA;AACA,kBAAkB,0DAAO;AACzB;;AAEA;AACA;AACA;;AAEA;AACA;AACA,aAAa,wEAAM;;AAEnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,CAAC;;AAED,gCAAgC,2EAAuB;;AAE1B;AAC7B;;;;;;;;;;;;;AC5GA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiF;AAC5B;AACG;;AAExD,2BAA2B,2EAAqB,CAAC,yDAAI;;AAErD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,0DAAM,IAAI,0DAAM;AACrD,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,mBAAmB,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEuI;AACvI","file":"js/16.js","sourcesContent":["import { B as Buffer, g as global } from './lazy-chunk-polyfill-node:buffer.es.js';\nimport { T as Transport, l as log, D as DisconnectedDeviceDuringOperation, a as TransportError, b as DisconnectedDevice, c as TransportOpenUserCancelled } from './lazy-chunk-index.es.js';\nimport { h as hidFraming } from './lazy-chunk-hid-framing.es.js';\nimport { i as identifyUSBProductId, l as ledgerUSBVendorId } from './lazy-chunk-index.es2.js';\nimport './lazy-chunk-events.es.js';\nimport './lazy-chunk-_commonjsHelpers.es.js';\nimport './lazy-chunk-index.es3.js';\nimport './lazy-chunk-polyfill-node:process.es.js';\n\nconst ledgerDevices = [{\n  vendorId: ledgerUSBVendorId\n}];\n\nconst isSupported = () => Promise.resolve(!!(global.navigator && global.navigator.hid));\n\nconst getHID = () => {\n  // $FlowFixMe\n  const {\n    hid\n  } = navigator;\n  if (!hid) throw new TransportError(\"navigator.hid is not supported\", \"HIDNotSupported\");\n  return hid;\n};\n\nasync function requestLedgerDevices() {\n  const device = await getHID().requestDevice({\n    filters: ledgerDevices\n  });\n  if (Array.isArray(device)) return device;\n  return [device];\n}\n\nasync function getLedgerDevices() {\n  const devices = await getHID().getDevices();\n  return devices.filter(d => d.vendorId === ledgerUSBVendorId);\n}\n\nasync function getFirstLedgerDevice() {\n  const existingDevices = await getLedgerDevices();\n  if (existingDevices.length > 0) return existingDevices[0];\n  const devices = await requestLedgerDevices();\n  return devices[0];\n}\n/**\n * WebHID Transport implementation\n * @example\n * import TransportWebHID from \"@ledgerhq/hw-transport-webhid\";\n * ...\n * TransportWebHID.create().then(transport => ...)\n */\n\n\nclass TransportWebHID extends Transport {\n  constructor(device) {\n    super();\n    this.device = void 0;\n    this.deviceModel = void 0;\n    this.channel = Math.floor(Math.random() * 0xffff);\n    this.packetSize = 64;\n    this.inputs = [];\n    this.inputCallback = void 0;\n\n    this.read = () => {\n      if (this.inputs.length) {\n        return Promise.resolve(this.inputs.shift());\n      }\n\n      return new Promise(success => {\n        this.inputCallback = success;\n      });\n    };\n\n    this.onInputReport = e => {\n      const buffer = Buffer.from(e.data.buffer);\n\n      if (this.inputCallback) {\n        this.inputCallback(buffer);\n        this.inputCallback = null;\n      } else {\n        this.inputs.push(buffer);\n      }\n    };\n\n    this._disconnectEmitted = false;\n\n    this._emitDisconnect = e => {\n      if (this._disconnectEmitted) return;\n      this._disconnectEmitted = true;\n      this.emit(\"disconnect\", e);\n    };\n\n    this.exchange = apdu => this.exchangeAtomicImpl(async () => {\n      const {\n        channel,\n        packetSize\n      } = this;\n      log(\"apdu\", \"=> \" + apdu.toString(\"hex\"));\n      const framing = hidFraming(channel, packetSize); // Write...\n\n      const blocks = framing.makeBlocks(apdu);\n\n      for (let i = 0; i < blocks.length; i++) {\n        await this.device.sendReport(0, blocks[i]);\n      } // Read...\n\n\n      let result;\n      let acc;\n\n      while (!(result = framing.getReducedResult(acc))) {\n        const buffer = await this.read();\n        acc = framing.reduceResponse(acc, buffer);\n      }\n\n      log(\"apdu\", \"<= \" + result.toString(\"hex\"));\n      return result;\n    }).catch(e => {\n      if (e && e.message && e.message.includes(\"write\")) {\n        this._emitDisconnect(e);\n\n        throw new DisconnectedDeviceDuringOperation(e.message);\n      }\n\n      throw e;\n    });\n\n    this.device = device;\n    this.deviceModel = identifyUSBProductId(device.productId);\n    device.addEventListener(\"inputreport\", this.onInputReport);\n  }\n\n  /**\n   * Similar to create() except it will always display the device permission (even if some devices are already accepted).\n   */\n  static async request() {\n    const [device] = await requestLedgerDevices();\n    return TransportWebHID.open(device);\n  }\n  /**\n   * Similar to create() except it will never display the device permission (it returns a Promise<?Transport>, null if it fails to find a device).\n   */\n\n\n  static async openConnected() {\n    const devices = await getLedgerDevices();\n    if (devices.length === 0) return null;\n    return TransportWebHID.open(devices[0]);\n  }\n  /**\n   * Create a Ledger transport with a HIDDevice\n   */\n\n\n  static async open(device) {\n    await device.open();\n    const transport = new TransportWebHID(device);\n\n    const onDisconnect = e => {\n      if (device === e.device) {\n        getHID().removeEventListener(\"disconnect\", onDisconnect);\n\n        transport._emitDisconnect(new DisconnectedDevice());\n      }\n    };\n\n    getHID().addEventListener(\"disconnect\", onDisconnect);\n    return transport;\n  }\n\n  /**\n   * Release the transport device\n   */\n  async close() {\n    await this.exchangeBusyPromise;\n    this.device.removeEventListener(\"inputreport\", this.onInputReport);\n    await this.device.close();\n  }\n  /**\n   * Exchange with the device using APDU protocol.\n   * @param apdu\n   * @returns a promise of apdu response\n   */\n\n\n  setScrambleKey() {}\n\n}\nTransportWebHID.isSupported = isSupported;\nTransportWebHID.list = getLedgerDevices;\n\nTransportWebHID.listen = observer => {\n  let unsubscribed = false;\n  getFirstLedgerDevice().then(device => {\n    if (!device) {\n      observer.error(new TransportOpenUserCancelled(\"Access denied to use Ledger device\"));\n    } else if (!unsubscribed) {\n      const deviceModel = identifyUSBProductId(device.productId);\n      observer.next({\n        type: \"add\",\n        descriptor: device,\n        deviceModel\n      });\n      observer.complete();\n    }\n  }, error => {\n    observer.error(new TransportOpenUserCancelled(error.message));\n  });\n\n  function unsubscribe() {\n    unsubscribed = true;\n  }\n\n  return {\n    unsubscribe\n  };\n};\n\nexport default TransportWebHID;\n//# sourceMappingURL=lazy-chunk-TransportWebHID.es.js.map\n","import { B as Buffer } from './lazy-chunk-polyfill-node:buffer.es.js';\nimport { g as getDefaultExportFromCjs, c as createCommonjsModule } from './lazy-chunk-_commonjsHelpers.es.js';\nimport './lazy-chunk-index.es.js';\nimport { _ as _errors } from './lazy-chunk-index.es2.js';\n\nvar hidFraming = createCommonjsModule(function (module, exports) {\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n\n\nconst Tag = 0x05;\n\nfunction asUInt16BE(value) {\n  const b = Buffer.alloc(2);\n  b.writeUInt16BE(value, 0);\n  return b;\n}\n\nconst initialAcc = {\n  data: Buffer.alloc(0),\n  dataLength: 0,\n  sequence: 0\n};\n/**\n *\n */\n\nconst createHIDframing = (channel, packetSize) => {\n  return {\n    makeBlocks(apdu) {\n      let data = Buffer.concat([asUInt16BE(apdu.length), apdu]);\n      const blockSize = packetSize - 5;\n      const nbBlocks = Math.ceil(data.length / blockSize);\n      data = Buffer.concat([data, // fill data with padding\n      Buffer.alloc(nbBlocks * blockSize - data.length + 1).fill(0)]);\n      const blocks = [];\n\n      for (let i = 0; i < nbBlocks; i++) {\n        const head = Buffer.alloc(5);\n        head.writeUInt16BE(channel, 0);\n        head.writeUInt8(Tag, 2);\n        head.writeUInt16BE(i, 3);\n        const chunk = data.slice(i * blockSize, (i + 1) * blockSize);\n        blocks.push(Buffer.concat([head, chunk]));\n      }\n\n      return blocks;\n    },\n\n    reduceResponse(acc, chunk) {\n      let {\n        data,\n        dataLength,\n        sequence\n      } = acc || initialAcc;\n\n      if (chunk.readUInt16BE(0) !== channel) {\n        throw new _errors.TransportError(\"Invalid channel\", \"InvalidChannel\");\n      }\n\n      if (chunk.readUInt8(2) !== Tag) {\n        throw new _errors.TransportError(\"Invalid tag\", \"InvalidTag\");\n      }\n\n      if (chunk.readUInt16BE(3) !== sequence) {\n        throw new _errors.TransportError(\"Invalid sequence\", \"InvalidSequence\");\n      }\n\n      if (!acc) {\n        dataLength = chunk.readUInt16BE(5);\n      }\n\n      sequence++;\n      const chunkData = chunk.slice(acc ? 5 : 7);\n      data = Buffer.concat([data, chunkData]);\n\n      if (data.length > dataLength) {\n        data = data.slice(0, dataLength);\n      }\n\n      return {\n        data,\n        dataLength,\n        sequence\n      };\n    },\n\n    getReducedResult(acc) {\n      if (acc && acc.dataLength === acc.data.length) {\n        return acc.data;\n      }\n    }\n\n  };\n};\n\nvar _default = createHIDframing;\nexports.default = _default;\n\n});\n\nvar hidFraming$1 = /*@__PURE__*/getDefaultExportFromCjs(hidFraming);\n\nexport { hidFraming$1 as h };\n//# sourceMappingURL=lazy-chunk-hid-framing.es.js.map\n","import { a as getAugmentedNamespace } from './lazy-chunk-_commonjsHelpers.es.js';\nimport { d as dist } from './lazy-chunk-index.es.js';\nimport { s as semver } from './lazy-chunk-index.es3.js';\n\nvar _errors = /*@__PURE__*/getAugmentedNamespace(dist);\n\nconst devices = {\n  blue: {\n    id: \"blue\",\n    productName: \"Ledger Blue\",\n    productIdMM: 0x00,\n    legacyUsbProductId: 0x0000,\n    usbOnly: true,\n    memorySize: 480 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: _firwareVersion => 4 * 1024\n  },\n  nanoS: {\n    id: \"nanoS\",\n    productName: \"Ledger Nano S\",\n    productIdMM: 0x10,\n    legacyUsbProductId: 0x0001,\n    usbOnly: true,\n    memorySize: 320 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: firmwareVersion => semver.lt(semver.coerce(firmwareVersion), \"2.0.0\") ? 4 * 1024 : 2 * 1024\n  },\n  nanoX: {\n    id: \"nanoX\",\n    productName: \"Ledger Nano X\",\n    productIdMM: 0x40,\n    legacyUsbProductId: 0x0004,\n    usbOnly: false,\n    memorySize: 2 * 1024 * 1024,\n    blockSize: 4 * 1024,\n    getBlockSize: _firwareVersion => 4 * 1024,\n    bluetoothSpec: [{\n      // this is the legacy one (prototype version). we will eventually drop it.\n      serviceUuid: \"d973f2e0-b19e-11e2-9e96-0800200c9a66\",\n      notifyUuid: \"d973f2e1-b19e-11e2-9e96-0800200c9a66\",\n      writeUuid: \"d973f2e2-b19e-11e2-9e96-0800200c9a66\"\n    }, {\n      serviceUuid: \"13d63400-2c97-0004-0000-4c6564676572\",\n      notifyUuid: \"13d63400-2c97-0004-0001-4c6564676572\",\n      writeUuid: \"13d63400-2c97-0004-0002-4c6564676572\"\n    }]\n  }\n};\n\nconst devicesList = Object.values(devices);\n/**\n *\n */\n\nconst ledgerUSBVendorId = 0x2c97;\n/**\n *\n */\n\nconst identifyUSBProductId = usbProductId => {\n  const legacy = devicesList.find(d => d.legacyUsbProductId === usbProductId);\n  if (legacy) return legacy;\n  const mm = usbProductId >> 8;\n  const deviceModel = devicesList.find(d => d.productIdMM === mm);\n  return deviceModel;\n};\nconst bluetoothServices = [];\nconst serviceUuidToInfos = {};\n\nfor (let id in devices) {\n  const deviceModel = devices[id];\n  const {\n    bluetoothSpec\n  } = deviceModel;\n\n  if (bluetoothSpec) {\n    for (let i = 0; i < bluetoothSpec.length; i++) {\n      const spec = bluetoothSpec[i];\n      bluetoothServices.push(spec.serviceUuid);\n      serviceUuidToInfos[spec.serviceUuid] = serviceUuidToInfos[spec.serviceUuid.replace(/-/g, \"\")] = {\n        deviceModel,\n        ...spec\n      };\n    }\n  }\n}\n/**\n *\n */\n\n\nconst getBluetoothServiceUuids = () => bluetoothServices;\n/**\n *\n */\n\nconst getInfosForServiceUuid = uuid => serviceUuidToInfos[uuid.toLowerCase()];\n/**\n *\n */\n\nexport { _errors as _, getInfosForServiceUuid as a, getBluetoothServiceUuids as g, identifyUSBProductId as i, ledgerUSBVendorId as l };\n//# sourceMappingURL=lazy-chunk-index.es2.js.map\n"],"sourceRoot":""}