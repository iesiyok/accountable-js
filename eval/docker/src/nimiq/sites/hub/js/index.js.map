{"version":3,"sources":["sources://webpack/bootstrap","sources://./src/App.vue","webpack-generated:///./src/App.vue?8485","webpack-generated:///./src/App.vue?79cb","webpack-generated:///./src/App.vue?e319","webpack-generated:///./src/App.vue?2ba9","webpack:///./src/App.vue?f4f6","webpack-generated:///./src/App.vue?b3bd","webpack-generated:///./src/App.vue?5161","sources://./src/lib/RequestParser.ts","sources://./src/lib/RpcApi.ts","sources://./src/lib/StaticStore.ts","sources://./src/lib/paymentOptions/BitcoinPaymentOptions.ts","sources://./src/lib/paymentOptions/EtherPaymentOptions.ts","sources://./src/lib/paymentOptions/NimiqPaymentOptions.ts","sources://./src/lib/paymentOptions/ParsedPaymentOptions.ts","sources://./src/main.ts","sources://./src/router.ts","sources://external \"BitcoinJS\""],"names":[],"mappings":";QAAA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;QACA,QAAQ,oBAAoB;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA,iBAAiB,4BAA4B;QAC7C;QACA;QACA,kBAAkB,2BAA2B;QAC7C;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;;QAEA;;QAEA;QACA;QACA,4CAA4C,4uEAA4uE;QACxxE;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;QAEA;QACA;QACA;QACA;;;QAGA;;QAEA;QACA,iCAAiC;;QAEjC;QACA;QACA;QACA,KAAK;QACL;QACA;QACA;QACA,MAAM;QACN;;QAEA;QACA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,wBAAwB,kCAAkC;QAC1D,MAAM;QACN;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;QAEA;QACA,0CAA0C,oBAAoB,WAAW;;QAEzE;QACA;QACA;QACA;QAC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","file":"js/index.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"index\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"activate-btc~activate-btc-ledger~add-account~add-ledger~add-vesting-contract~cashlink~checkout~choos~64eed30e\":\"activate-btc~activate-btc-ledger~add-account~add-ledger~add-vesting-contract~cashlink~checkout~choos~64eed30e\",\"activate-btc-ledger~add-ledger~refund-swap-ledger~sign-btc-transaction-ledger~sign-transaction-ledge~bf179231\":\"activate-btc-ledger~add-ledger~refund-swap-ledger~sign-btc-transaction-ledger~sign-transaction-ledge~bf179231\",\"activate-btc-ledger\":\"activate-btc-ledger\",\"add-account~add-ledger~rename\":\"add-account~add-ledger~rename\",\"add-account~add-ledger\":\"add-account~add-ledger\",\"add-ledger\":\"add-ledger\",\"activate-btc~choose-address~refund-swap-ledger~sign-btc-transaction~sign-btc-transaction-ledger~swap~5a272566\":\"activate-btc~choose-address~refund-swap-ledger~sign-btc-transaction~sign-btc-transaction-ledger~swap~5a272566\",\"activate-btc\":\"activate-btc\",\"sign-btc-transaction-ledger\":\"sign-btc-transaction-ledger\",\"choose-address\":\"choose-address\",\"sign-btc-transaction\":\"sign-btc-transaction\",\"add-account\":\"add-account\",\"rename\":\"rename\",\"add-vesting-contract~cashlink~checkout~migrate~refund-swap-ledger~sign-transaction~sign-transaction-~c250bbd7\":\"add-vesting-contract~cashlink~checkout~migrate~refund-swap-ledger~sign-transaction~sign-transaction-~c250bbd7\",\"checkout~sign-transaction-ledger\":\"checkout~sign-transaction-ledger\",\"sign-transaction-ledger\":\"sign-transaction-ledger\",\"refund-swap-ledger~swap-ledger\":\"refund-swap-ledger~swap-ledger\",\"refund-swap-ledger\":\"refund-swap-ledger\",\"swap~swap-ledger\":\"swap~swap-ledger\",\"swap-ledger\":\"swap-ledger\",\"swap\":\"swap\",\"add-vesting-contract\":\"add-vesting-contract\",\"cashlink\":\"cashlink\",\"checkout\":\"checkout\",\"migrate\":\"migrate\",\"common\":\"common\",\"export\":\"export\",\"logout\":\"logout\",\"logout-ledger\":\"logout-ledger\",\"onboarding\":\"onboarding\",\"request-error\":\"request-error\",\"sign-message\":\"sign-message\",\"unsupported-ledger\":\"unsupported-ledger\",\"sign-transaction\":\"sign-transaction\",\"change-password\":\"change-password\",\"cookie-decoder\":\"cookie-decoder\",\"electrum-client\":\"electrum-client\",\"lang-de-po\":\"lang-de-po\",\"lang-en-po\":\"lang-en-po\",\"lang-es-po\":\"lang-es-po\",\"lang-fr-po\":\"lang-fr-po\",\"lang-nl-po\":\"lang-nl-po\",\"lang-ru-po\":\"lang-ru-po\",\"lang-uk-po\":\"lang-uk-po\",\"lang-zh-po\":\"lang-zh-po\"}[chunkId]||chunkId) + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n \t\t\t\tif (script.src.indexOf(window.location.origin + '/') !== 0) {\n \t\t\t\t\tscript.crossOrigin = \"anonymous\";\n \t\t\t\t}\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\",\"chunk-common\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component, Watch, Vue } from 'vue-property-decorator';\nimport { State } from 'vuex-class';\nimport { REQUEST_ERROR } from './router';\nimport { LoadingSpinner } from '@nimiq/vue-components';\n\nimport '@nimiq/style/nimiq-style.min.css';\nimport '@nimiq/vue-components/dist/NimiqVueComponents.css';\n\n@Component({components: {LoadingSpinner}})\nexport default class App extends Vue {\n    @State('isRequestLoaded') private isRequestLoaded!: boolean;\n\n    public async created() {\n        await this.$store.dispatch('initWallets');\n        this.$rpc.start();\n    }\n\n    private get isLoaded() {\n        return this.isRequestLoaded\n            || this.$route.name === REQUEST_ERROR;\n    }\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"app\" } },\n    [\n      _vm._m(0),\n      !_vm.isLoaded || _vm.$root.loading\n        ? _c(\"div\", { staticClass: \"loading\" }, [_c(\"LoadingSpinner\")], 1)\n        : _c(\"router-view\")\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"header\", { staticClass: \"logo\" }, [\n      _c(\"span\", { staticClass: \"nq-icon nimiq-logo\" }),\n      _c(\"span\", { staticClass: \"logo-wordmark\" }, [_vm._v(\"Nimiq\")]),\n      _c(\"span\", { staticClass: \"logo-subtitle\" })\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\n#app > .container {\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    -webkit-box-align: center;\\n        -ms-flex-align: center;\\n            align-items: center;\\n    width: 100%;\\n    -ms-flex-negative: 0;\\n        flex-shrink: 0;\\n    -webkit-box-pack: center;\\n        -ms-flex-pack: center;\\n            justify-content: center;\\n    -webkit-box-flex: 1;\\n        -ms-flex-positive: 1;\\n            flex-grow: 1;\\n}\\n#app > .container.pad-bottom {\\n    margin-bottom: 9.5rem; /* Same height as the header (2 * 3rem + 3.5rem) */\\n}\\n\\n/* transition-fade */\\n.transition-fade-enter,\\n.transition-fade-leave-to {\\n    opacity: 0;\\n}\\n\\n/* transition-flip: Note that position: relative and a perspective needs to be applied to the parent */\\n.transition-flip-enter-active,\\n.transition-flip-leave-active {\\n    --safari-rotate-fix: translateZ(1px);\\n    -webkit-transition: -webkit-transform .6s;\\n    transition: -webkit-transform .6s;\\n    transition: transform .6s;\\n    transition: transform .6s, -webkit-transform .6s;\\n    -webkit-transform-style: preserve-3d;\\n            transform-style: preserve-3d;\\n    -webkit-backface-visibility: hidden;\\n            backface-visibility: hidden;\\n}\\n.transition-flip-leave-active {\\n    position: absolute !important;\\n    top: 0;\\n    left: 0;\\n}\\n.transition-flip-enter-to,\\n.transition-flip-leave {\\n    -webkit-transform: rotateY(0) var(--safari-rotate-fix);\\n            transform: rotateY(0) var(--safari-rotate-fix);\\n}\\n.transition-flip-enter.flip-primary,\\n.transition-flip-leave-to.flip-primary {\\n    -webkit-transform: rotateY(-180deg) var(--safari-rotate-fix);\\n            transform: rotateY(-180deg) var(--safari-rotate-fix);\\n}\\n.transition-flip-enter.flip-secondary,\\n.transition-flip-leave-to.flip-secondary {\\n    -webkit-transform: rotateY(180deg) var(--safari-rotate-fix);\\n            transform: rotateY(180deg) var(--safari-rotate-fix);\\n}\\n.nq-button {\\n    height: 6.5rem;\\n}\\n@media (max-width: 450px) {\\n#app > .container {\\n        margin-bottom: 0 !important;\\n        -webkit-box-pack: end;\\n            -ms-flex-pack: end;\\n                justify-content: flex-end;\\n}\\n.nq-card {\\n        margin: 0;\\n        border-bottom-left-radius: 0;\\n        border-bottom-right-radius: 0;\\n}\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"fa1ef42a\", content, false, {\"sourceMap\":false,\"shadowMode\":false});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\", function() {\n     var newContent = require(\"!!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=7ba5bd90&\"\nimport script from \"./App.vue?vue&type=script&lang=ts&\"\nexport * from \"./App.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/iesiyok/projects/acc-js/development/nimiq2/hub/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('7ba5bd90')) {\n      api.createRecord('7ba5bd90', component.options)\n    } else {\n      api.reload('7ba5bd90', component.options)\n    }\n    module.hot.accept(\"./App.vue?vue&type=template&id=7ba5bd90&\", function () {\n      api.rerender('7ba5bd90', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/App.vue\"\nexport default component.exports","import mod from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../node_modules/cache-loader/dist/cjs.js??ref--12-0!../node_modules/ts-loader/index.js??ref--12-1!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=script&lang=ts&\"","import mod from \"-!../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=css&\"","export * from \"-!../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"3e5283d1-vue-loader-template\\\"}!../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=template&id=7ba5bd90&\"","import { isMilliseconds, includesOrigin } from './Helpers';\nimport { State } from '@nimiq/rpc';\nimport {\n    RequestType,\n    CashlinkTheme,\n    Currency,\n    PaymentType,\n} from './PublicRequestTypes';\nimport type {\n    BasicRequest,\n    CheckoutRequest,\n    CreateCashlinkRequest,\n    ExportRequest,\n    ManageCashlinkRequest,\n    OnboardRequest,\n    ChooseAddressRequest,\n    RenameRequest,\n    RpcRequest,\n    SignMessageRequest,\n    SignTransactionRequest,\n    SimpleRequest,\n    NimiqCheckoutRequest,\n    MultiCurrencyCheckoutRequest,\n    SignBtcTransactionRequest,\n    SetupSwapRequest,\n    RefundSwapRequest,\n} from './PublicRequestTypes';\nimport type {\n    ParsedBasicRequest,\n    ParsedCheckoutRequest,\n    ParsedCreateCashlinkRequest,\n    ParsedExportRequest,\n    ParsedManageCashlinkRequest,\n    ParsedOnboardRequest,\n    ParsedChooseAddressRequest,\n    ParsedRenameRequest,\n    ParsedRpcRequest,\n    ParsedSignMessageRequest,\n    ParsedSignTransactionRequest,\n    ParsedSimpleRequest,\n    ParsedSignBtcTransactionRequest,\n    ParsedSetupSwapRequest,\n    ParsedRefundSwapRequest,\n} from './RequestTypes';\nimport { ParsedNimiqDirectPaymentOptions } from './paymentOptions/NimiqPaymentOptions';\nimport { ParsedEtherDirectPaymentOptions } from './paymentOptions/EtherPaymentOptions';\nimport { ParsedBitcoinDirectPaymentOptions } from './paymentOptions/BitcoinPaymentOptions';\nimport { Utf8Tools } from '@nimiq/utils';\nimport Config from 'config';\nimport { SwapAsset } from '@nimiq/fastspot-api';\n\nexport class RequestParser {\n    public static parse(\n            request: RpcRequest,\n            state: State,\n            requestType: RequestType,\n        ): ParsedRpcRequest | null {\n        if (!request.appName) throw new Error('appName is required');\n\n        switch (requestType) {\n            case RequestType.SIGN_TRANSACTION:\n                const signTransactionRequest = request as SignTransactionRequest;\n\n                if (!signTransactionRequest.value) throw new Error('value is required');\n                if (!signTransactionRequest.validityStartHeight) throw new Error('validityStartHeight is required');\n\n                return {\n                    kind: RequestType.SIGN_TRANSACTION,\n                    appName: signTransactionRequest.appName,\n                    sender: Nimiq.Address.fromString(signTransactionRequest.sender),\n                    recipient: Nimiq.Address.fromString(signTransactionRequest.recipient),\n                    recipientType: signTransactionRequest.recipientType || Nimiq.Account.Type.BASIC,\n                    recipientLabel: signTransactionRequest.recipientLabel,\n                    value: signTransactionRequest.value,\n                    fee: signTransactionRequest.fee || 0,\n                    data: typeof signTransactionRequest.extraData === 'string'\n                        ? Utf8Tools.stringToUtf8ByteArray(signTransactionRequest.extraData)\n                        : signTransactionRequest.extraData || new Uint8Array(0),\n                    flags: signTransactionRequest.flags || Nimiq.Transaction.Flag.NONE,\n                    validityStartHeight: signTransactionRequest.validityStartHeight,\n                } as ParsedSignTransactionRequest;\n            case RequestType.CHECKOUT:\n                const checkoutRequest = request as CheckoutRequest;\n\n                if (checkoutRequest.shopLogoUrl) {\n                    let origin;\n                    try {\n                        origin = new URL(checkoutRequest.shopLogoUrl).origin;\n                    } catch (err) {\n                        throw new Error(`shopLogoUrl must be a valid URL: ${err}`);\n                    }\n                    if (origin !== state.origin) {\n                        throw new Error(\n                            'shopLogoUrl must have same origin as caller website. Image at ' +\n                            checkoutRequest.shopLogoUrl +\n                            ' is not on caller origin ' +\n                            state.origin,\n                        );\n                    }\n                }\n\n                const isPointOfSale = 'isPointOfSale' in checkoutRequest && !!checkoutRequest.isPointOfSale;\n\n                let disableDisclaimer = !!checkoutRequest.disableDisclaimer;\n                if (disableDisclaimer && !includesOrigin(Config.privilegedOrigins, state.origin)) {\n                    // warn and continue\n                    console.warn(`Origin ${state.origin} is not authorized to request disableDisclaimer.`);\n                    disableDisclaimer = false;\n                }\n\n                if (!checkoutRequest.version || checkoutRequest.version === 1) {\n                    if (typeof checkoutRequest.value !== 'number' || checkoutRequest.value <= 0) {\n                        throw new Error('value must be a number >0');\n                    }\n\n                    if (isPointOfSale) {\n                        throw new Error('isPointOfSale is not supported for v1 checkout.');\n                    }\n\n                    return {\n                        kind: RequestType.CHECKOUT,\n                        version: 1,\n                        appName: checkoutRequest.appName,\n                        shopLogoUrl: checkoutRequest.shopLogoUrl,\n                        time: Date.now(),\n                        paymentOptions: [new ParsedNimiqDirectPaymentOptions({\n                            currency: Currency.NIM,\n                            type: PaymentType.DIRECT,\n                            amount: checkoutRequest.value.toString(),\n                            expires: 0, // unused for NimiqCheckoutRequests\n                            protocolSpecific: {\n                                extraData: checkoutRequest.extraData,\n                                recipient: checkoutRequest.recipient,\n                                recipientType: checkoutRequest.recipientType || Nimiq.Account.Type.BASIC,\n                                sender: checkoutRequest.sender,\n                                forceSender: !!checkoutRequest.forceSender,\n                                fee: checkoutRequest.fee || 0,\n                                flags: checkoutRequest.flags || Nimiq.Transaction.Flag.NONE,\n                                validityDuration: checkoutRequest.validityDuration,\n                            },\n                        })],\n                        isPointOfSale,\n                        disableDisclaimer,\n                    } as ParsedCheckoutRequest;\n                }\n\n                if (checkoutRequest.version === 2) {\n                    if ( // Check if the origin is allowed to make requests without a NIM payment option\n                        !includesOrigin(Config.checkoutWithoutNimOrigins, state.origin)\n                        && !checkoutRequest.paymentOptions.some((option) => option.currency === Currency.NIM)\n                    ) {\n                        throw new Error('CheckoutRequest must provide a NIM paymentOption.');\n                    }\n\n                    if (!checkoutRequest.shopLogoUrl) {\n                        throw new Error('shopLogoUrl: string is required'); // shop logo non optional in version 2\n                    }\n\n                    try {\n                        // Test whether the browser is able to parse the currency as an ISO 4217 currency code,\n                        // see https://www.ecma-international.org/ecma-402/1.0/#sec-6.3.1\n                        (0).toLocaleString('en-US', {\n                            style: 'currency',\n                            currency: checkoutRequest.fiatCurrency,\n                        });\n                    } catch (e) {\n                        throw new Error(`Failed to parse currency ${checkoutRequest.fiatCurrency}. Is it a valid ` +\n                            'ISO 4217 currency code?');\n                    }\n\n                    if (!checkoutRequest.fiatAmount\n                        || typeof checkoutRequest.fiatAmount !== 'number'\n                        || checkoutRequest.fiatAmount <= 0) {\n                        throw new Error('fiatAmount must be a positive non-zero number');\n                    }\n\n                    if (!checkoutRequest.callbackUrl || typeof checkoutRequest.callbackUrl !== 'string') {\n                        if (checkoutRequest.paymentOptions.some((option) => option.currency !== Currency.NIM)) {\n                            throw new Error('A callbackUrl: string is required for currencies other than NIM to ' +\n                                'monitor payments.');\n                        }\n                        if (!checkoutRequest.paymentOptions.every((option) => !!option.protocolSpecific.recipient)) {\n                            throw new Error('A callbackUrl: string or all recipients must be provided');\n                        }\n                    } else {\n                        let origin;\n                        try {\n                            origin = new URL(checkoutRequest.callbackUrl).origin;\n                        } catch (err) {\n                            throw new Error(`callbackUrl must be a valid URL: ${err}`);\n                        }\n                        if (origin !== state.origin\n                            // Whitelist https://vendor.cryptopayment.link when the request was coming from just\n                            // https://cryptopayment.link\n                            && !(state.origin === 'https://cryptopayment.link'\n                                && origin === 'https://vendor.cryptopayment.link')) {\n                            throw new Error('callbackUrl must have the same origin as caller Website. ' +\n                                checkoutRequest.callbackUrl +\n                                ' is not on caller origin ' +\n                                state.origin,\n                            );\n                        }\n                        if (!checkoutRequest.csrf || typeof checkoutRequest.csrf !== 'string') {\n                            throw new Error('A CSRF token must be provided alongside the callbackUrl.');\n                        }\n                    }\n\n                    if (checkoutRequest.time && typeof checkoutRequest.time !== 'number') {\n                        throw new Error('time: number is required');\n                    }\n\n                    const currencies = new Set<Currency>();\n\n                    return {\n                        kind: RequestType.CHECKOUT,\n                        version: 2,\n                        appName: checkoutRequest.appName,\n                        shopLogoUrl: checkoutRequest.shopLogoUrl,\n                        callbackUrl: checkoutRequest.callbackUrl,\n                        csrf: checkoutRequest.csrf,\n                        time: !checkoutRequest.time\n                            ? Date.now()\n                            : isMilliseconds(checkoutRequest.time)\n                                ? checkoutRequest.time\n                                : checkoutRequest.time * 1000,\n                        fiatCurrency: checkoutRequest.fiatCurrency,\n                        fiatAmount: checkoutRequest.fiatAmount,\n                        paymentOptions: checkoutRequest.paymentOptions.map((option) => {\n                            if (currencies.has(option.currency)) {\n                                throw new Error('Only one paymentOption can be provided per cryptocurrency');\n                            } else {\n                                currencies.add(option.currency);\n                            }\n                            switch (option.type) {\n                                case PaymentType.DIRECT:\n                                    switch (option.currency) {\n                                        case Currency.NIM:\n                                            // Once extraData from MultiCurrencyCheckoutRequest is removed\n                                            // the next few lines become obsolete.\n                                            if (!option.protocolSpecific.extraData && checkoutRequest.extraData) {\n                                                console.warn('Usage of MultiCurrencyCheckoutRequest.extraData is'\n                                                    + ' deprecated. Use NimiqDirectPaymentOptions.protocolSpecific'\n                                                    + '.extraData instead');\n\n                                                option.protocolSpecific.extraData = checkoutRequest.extraData;\n                                            }\n                                            return new ParsedNimiqDirectPaymentOptions(\n                                                option,\n                                                { isPointOfSale },\n                                            );\n                                        case Currency.ETH:\n                                            return new ParsedEtherDirectPaymentOptions(option);\n                                        case Currency.BTC:\n                                            return new ParsedBitcoinDirectPaymentOptions(option);\n                                        default:\n                                            throw new Error(`Currency ${(option as any).currency} not supported`);\n                                    }\n                                default:\n                                    throw new Error(`PaymentType ${(option as any).type} not supported`);\n                            }\n                        }),\n                        isPointOfSale,\n                        disableDisclaimer,\n                    } as ParsedCheckoutRequest;\n                }\n\n                throw new Error('Invalid version: must be 1 or 2');\n            case RequestType.ONBOARD:\n                const onboardRequest = request as OnboardRequest;\n                return {\n                    kind: requestType,\n                    appName: onboardRequest.appName,\n                    disableBack: !!onboardRequest.disableBack,\n                } as ParsedOnboardRequest;\n            case RequestType.CHOOSE_ADDRESS:\n                const chooseAddressRequest = request as ChooseAddressRequest;\n                return {\n                    kind: requestType,\n                    appName: chooseAddressRequest.appName,\n                    returnBtcAddress: !!chooseAddressRequest.returnBtcAddress,\n                    minBalance: Number(chooseAddressRequest.minBalance) || 0,\n                    disableContracts: !!chooseAddressRequest.disableContracts,\n                    disableLegacyAccounts: !!chooseAddressRequest.disableLegacyAccounts,\n                    disableBip39Accounts: !!chooseAddressRequest.disableBip39Accounts,\n                    disableLedgerAccounts: !!chooseAddressRequest.disableLedgerAccounts,\n                } as ParsedChooseAddressRequest;\n            case RequestType.SIGNUP:\n            case RequestType.LOGIN:\n            case RequestType.MIGRATE:\n            case RequestType.ADD_VESTING_CONTRACT:\n                return {\n                    kind: requestType,\n                    appName: request.appName,\n                } as ParsedBasicRequest;\n            case RequestType.CHANGE_PASSWORD:\n            case RequestType.LOGOUT:\n            case RequestType.ADD_ADDRESS:\n            case RequestType.ACTIVATE_BITCOIN:\n                const simpleRequest = request as SimpleRequest;\n\n                if (!simpleRequest.accountId) throw new Error('accountId is required');\n\n                return {\n                    kind: requestType,\n                    appName: simpleRequest.appName,\n                    walletId: simpleRequest.accountId,\n                } as ParsedSimpleRequest;\n            case RequestType.EXPORT:\n                const exportRequest = request as ExportRequest;\n\n                if (!exportRequest.accountId) throw new Error('accountId is required');\n\n                return {\n                    kind: RequestType.EXPORT,\n                    appName: exportRequest.appName,\n                    walletId: exportRequest.accountId,\n                    fileOnly: exportRequest.fileOnly,\n                    wordsOnly: exportRequest.wordsOnly,\n                } as ParsedExportRequest;\n            case RequestType.RENAME:\n                const renameRequest = request as RenameRequest;\n\n                if (!renameRequest.accountId) throw new Error('accountId is required');\n\n                return {\n                    kind: RequestType.RENAME,\n                    appName: renameRequest.appName,\n                    walletId: renameRequest.accountId,\n                    address: renameRequest.address,\n                } as ParsedRenameRequest;\n            case RequestType.SIGN_MESSAGE:\n                const signMessageRequest = request as SignMessageRequest;\n                if (typeof signMessageRequest.message !== 'string'\n                    && !(signMessageRequest.message instanceof Uint8Array)) {\n                    throw new Error('message must be a string or Uint8Array');\n                }\n                return {\n                    kind: RequestType.SIGN_MESSAGE,\n                    appName: signMessageRequest.appName,\n                    signer: signMessageRequest.signer\n                        ? Nimiq.Address.fromString(signMessageRequest.signer)\n                        : undefined,\n                    message: signMessageRequest.message,\n                } as ParsedSignMessageRequest;\n            case RequestType.CREATE_CASHLINK:\n                const createCashlinkRequest = request as CreateCashlinkRequest;\n                const senderAddress = 'senderAddress' in createCashlinkRequest && !!createCashlinkRequest.senderAddress\n                    ? Nimiq.Address.fromString(createCashlinkRequest.senderAddress)\n                    : undefined;\n                const senderBalance = 'senderBalance' in createCashlinkRequest\n                    ? createCashlinkRequest.senderBalance\n                    : undefined;\n                if (senderBalance !== undefined && !Nimiq.NumberUtils.isUint64(senderBalance)) {\n                    throw new Error('Invalid Cashlink senderBalance');\n                }\n\n                const value = createCashlinkRequest.value;\n                if (value !== undefined && (!Nimiq.NumberUtils.isUint64(value) || value === 0)) {\n                    throw new Error('Malformed Cashlink value');\n                }\n\n                let message = 'message' in createCashlinkRequest ? createCashlinkRequest.message : undefined;\n                if (message !== undefined) {\n                    if (typeof message !== 'string') {\n                        throw new Error('Cashlink message must be a string');\n                    }\n                    const { result: truncated, didTruncate } = Utf8Tools.truncateToUtf8ByteLength(message, 255);\n                    if (!('autoTruncateMessage' in createCashlinkRequest && createCashlinkRequest.autoTruncateMessage)\n                        && didTruncate) {\n                        throw new Error('Cashlink message must be shorter than 256 bytes or autoTruncateMessage must '\n                            + 'be enabled.');\n                    }\n                    message = truncated;\n                }\n\n                const theme = createCashlinkRequest.theme || CashlinkTheme.UNSPECIFIED;\n                if (!Object.values(CashlinkTheme).includes(theme) || !Nimiq.NumberUtils.isUint8(theme)) {\n                    // Also checking whether theme is a valid Uint8 to catch ids that are potentially to high in the\n                    // CashlinkTheme enum and to filter out values that are actually the enum keys that have been added\n                    // by typescript for reverse mapping.\n                    throw new Error('Invalid Cashlink theme');\n                }\n\n                const returnLink = !!createCashlinkRequest.returnLink;\n                if (returnLink && !includesOrigin(Config.privilegedOrigins, state.origin)) {\n                    throw new Error(`Origin ${state.origin} is not authorized to request returnLink.`);\n                }\n                const skipSharing = !!createCashlinkRequest.returnLink && !!createCashlinkRequest.skipSharing;\n\n                return {\n                    kind: RequestType.CREATE_CASHLINK,\n                    appName: createCashlinkRequest.appName,\n                    senderAddress,\n                    senderBalance,\n                    value,\n                    message,\n                    theme,\n                    fiatCurrency: createCashlinkRequest.fiatCurrency,\n                    returnLink,\n                    skipSharing,\n                } as ParsedCreateCashlinkRequest;\n            case RequestType.MANAGE_CASHLINK:\n                const manageCashlinkRequest = request as ManageCashlinkRequest;\n                return {\n                    kind: RequestType.MANAGE_CASHLINK,\n                    appName: manageCashlinkRequest.appName,\n                    cashlinkAddress: Nimiq.Address.fromString(manageCashlinkRequest.cashlinkAddress),\n                } as ParsedManageCashlinkRequest;\n            case RequestType.SIGN_BTC_TRANSACTION:\n                const signBtcTransactionRequest = request as SignBtcTransactionRequest;\n\n                if (!signBtcTransactionRequest.accountId) throw new Error('accountId is required');\n\n                if (!signBtcTransactionRequest.inputs || !Array.isArray(signBtcTransactionRequest.inputs)\n                    || !signBtcTransactionRequest.inputs.length) throw new Error('inputs must be a non-empty array');\n\n                const inputs = signBtcTransactionRequest.inputs.map((input) => {\n                    if (!input || typeof input !== 'object') throw new Error('input must be an object');\n\n                    // tslint:disable-next-line:no-shadowed-variable\n                    const { address, transactionHash, outputIndex, value, sequence } = input;\n                    let { outputScript, witnessScript } = input;\n\n                    if (typeof address !== 'string') throw new Error('input must contain an address of type string');\n\n                    if (typeof transactionHash !== 'string' || transactionHash.length !== 64) {\n                        throw new Error('input must contain a valid transactionHash');\n                    }\n                    try {\n                        Nimiq.BufferUtils.fromHex(transactionHash); // throws if invalid hex\n                    } catch (e) {\n                        throw new Error('input transactionHash must be hex');\n                    }\n\n                    if (typeof outputIndex !== 'number' || outputIndex < 0) {\n                        throw new Error('input must contain a valid outputIndex');\n                    }\n\n                    try {\n                        // Convert to hex. Throws if invalid hex or base64.\n                        outputScript = Nimiq.BufferUtils.toHex(Nimiq.BufferUtils.fromAny(outputScript));\n                    } catch (e) {\n                        throw new Error('input outputScript must be hex or base64');\n                    }\n                    if (outputScript.length !== 44    // P2WPKH\n                        && outputScript.length !== 46 // P2SH\n                        && outputScript.length !== 50 // P2PKH\n                        && outputScript.length !== 68 // HTLC\n                    ) throw new Error('input outputScript has invalid length');\n\n                    if (witnessScript !== undefined) {\n                        if (typeof witnessScript !== 'string') throw new Error('Invalid input witnessScript');\n                        try {\n                            // Convert to hex. Throws if invalid hex or base64.\n                            witnessScript = Nimiq.BufferUtils.toHex(Nimiq.BufferUtils.fromAny(witnessScript));\n                        } catch (e) {\n                            throw new Error('input witnessScript must be hex or base64');\n                        }\n                    }\n\n                    if (typeof value !== 'number' || value <= 0) throw new Error('input must contain a positive value');\n\n                    if (sequence !== undefined && !Nimiq.NumberUtils.isUint32(sequence)) {\n                        throw new Error('Invalid input sequence');\n                    }\n\n                    // return only checked properties\n                    return { address, transactionHash, outputIndex, outputScript, value, witnessScript, sequence };\n                });\n\n                if (!signBtcTransactionRequest.output || typeof signBtcTransactionRequest.output !== 'object') {\n                    throw new Error('output must be an object');\n                }\n\n                const output = signBtcTransactionRequest.output;\n\n                if (!output.value || typeof output.value !== 'number' || output.value <= 0) {\n                    throw new Error('output must contain a positive value');\n                }\n\n                if (output.label && typeof output.label !== 'string') {\n                    throw new Error('output label must be a string');\n                }\n\n                let changeOutput: ParsedSignBtcTransactionRequest['changeOutput'] | undefined;\n                if (signBtcTransactionRequest.changeOutput) {\n                    if (typeof signBtcTransactionRequest.changeOutput !== 'object') {\n                        throw new Error('changeOutput must be an object');\n                    }\n\n                    changeOutput = signBtcTransactionRequest.changeOutput;\n\n                    if (!changeOutput.value || typeof changeOutput.value !== 'number' || changeOutput.value <= 0) {\n                        throw new Error('changeOutput must contain a positive value');\n                    }\n                }\n\n                const locktime = signBtcTransactionRequest.locktime;\n                if (locktime !== undefined && !Nimiq.NumberUtils.isUint32(locktime)) {\n                    throw new Error('Invalid locktime');\n                }\n\n                const parsedSignBtcTransactionRequest: ParsedSignBtcTransactionRequest = {\n                    kind: RequestType.SIGN_BTC_TRANSACTION,\n                    walletId: signBtcTransactionRequest.accountId,\n                    appName: signBtcTransactionRequest.appName,\n                    inputs,\n                    output,\n                    changeOutput,\n                    locktime,\n                };\n                return parsedSignBtcTransactionRequest;\n            case RequestType.SETUP_SWAP:\n                const setupSwapRequest = request as SetupSwapRequest;\n\n                if (!setupSwapRequest.accountId) throw new Error('accountId is required');\n\n                // Validate and parse only what we use in the Hub\n\n                if (!['NIM', 'BTC', 'EUR'].includes(setupSwapRequest.fund.type)) {\n                    throw new Error('Funding type is not supported');\n                }\n\n                if (!['NIM', 'BTC', 'EUR'].includes(setupSwapRequest.redeem.type)) {\n                    throw new Error('Redeeming type is not supported');\n                }\n\n                if (setupSwapRequest.fund.type === setupSwapRequest.redeem.type) {\n                    throw new Error('Cannot swap between the same types');\n                }\n\n                if (setupSwapRequest.layout === 'slider') {\n                    if (!Array.isArray(setupSwapRequest.nimiqAddresses)) {\n                        throw new Error('When using the \"slider\" layout, `nimAddresses` must be an array');\n                    }\n\n                    if (!setupSwapRequest.bitcoinAccount) {\n                        throw new Error('When using the \"slider\" layout, `bitcoinAccount` must be provided');\n                    }\n\n                    const nimiqAddress = setupSwapRequest.fund.type === 'NIM'\n                        ? Nimiq.Address.fromAny(setupSwapRequest.fund.sender)\n                        : setupSwapRequest.redeem.type === 'NIM'\n                            ? Nimiq.Address.fromAny(setupSwapRequest.redeem.recipient)\n                            : '';\n                    if (nimiqAddress && !setupSwapRequest.nimiqAddresses.some(\n                        ({ address }) => Nimiq.Address.fromAny(address).equals(nimiqAddress))) {\n                        throw new Error('The address details of the NIM address doing the swap must be provided');\n                    }\n                }\n\n                if (setupSwapRequest.redeem.type === 'NIM') {\n                    if (!setupSwapRequest.redeem.validityStartHeight\n                        || setupSwapRequest.redeem.validityStartHeight < 1) {\n                        throw new Error(\n                            `Invalid validity start height: ${setupSwapRequest.redeem.validityStartHeight}`,\n                        );\n                    }\n                }\n\n                if (setupSwapRequest.fund.type === 'NIM') {\n                    if (!setupSwapRequest.fund.validityStartHeight\n                        || setupSwapRequest.fund.validityStartHeight < 1) {\n                        throw new Error(`Invalid validity start height: ${setupSwapRequest.fund.validityStartHeight}`);\n                    }\n                }\n\n                const parsedSetupSwapRequest: ParsedSetupSwapRequest = {\n                    kind: RequestType.SETUP_SWAP,\n                    walletId: setupSwapRequest.accountId,\n                    ...setupSwapRequest,\n\n                    fund: setupSwapRequest.fund.type === 'NIM' ? {\n                        ...setupSwapRequest.fund,\n                        type: SwapAsset[setupSwapRequest.fund.type],\n                        sender: Nimiq.Address.fromAny(setupSwapRequest.fund.sender),\n                    } : setupSwapRequest.fund.type === 'BTC' ? {\n                        ...setupSwapRequest.fund,\n                        type: SwapAsset[setupSwapRequest.fund.type],\n                    } : { // EUR\n                        ...setupSwapRequest.fund,\n                        type: SwapAsset[setupSwapRequest.fund.type],\n                    },\n\n                    redeem: setupSwapRequest.redeem.type === 'NIM' ? {\n                        ...setupSwapRequest.redeem,\n                        type: SwapAsset[setupSwapRequest.redeem.type],\n                        recipient: Nimiq.Address.fromAny(setupSwapRequest.redeem.recipient),\n                        extraData: typeof setupSwapRequest.redeem.extraData === 'string'\n                            ? Nimiq.BufferUtils.fromAny(setupSwapRequest.redeem.extraData)\n                            : setupSwapRequest.redeem.extraData,\n                    } : setupSwapRequest.redeem.type === 'BTC' ? {\n                        ...setupSwapRequest.redeem,\n                        type: SwapAsset[setupSwapRequest.redeem.type],\n                    } : { // EUR\n                        ...setupSwapRequest.redeem,\n                        type: SwapAsset[setupSwapRequest.redeem.type],\n                    },\n\n                    layout: setupSwapRequest.layout || 'standard',\n                };\n\n                return parsedSetupSwapRequest;\n            case RequestType.REFUND_SWAP:\n                const refundSwapRequest = request as RefundSwapRequest;\n\n                // Only basic parsing and validation. Refund transaction specific data will be validated by the Keyguard\n                // or subsequent Ledger transaction signing requests.\n\n                if (!['NIM', 'BTC'].includes(refundSwapRequest.refund.type)) {\n                    throw new Error('Refunding object type must be \"NIM\" or \"BTC\"');\n                }\n\n                const parsedRefundSwapRequest: ParsedRefundSwapRequest = {\n                    kind: RequestType.REFUND_SWAP,\n                    appName: refundSwapRequest.appName,\n                    walletId: refundSwapRequest.accountId,\n\n                    refund: refundSwapRequest.refund.type === 'NIM' ? {\n                        ...refundSwapRequest.refund,\n                        type: SwapAsset[refundSwapRequest.refund.type],\n                        sender: Nimiq.Address.fromAny(refundSwapRequest.refund.sender),\n                        recipient: Nimiq.Address.fromAny(refundSwapRequest.refund.recipient),\n                        extraData: typeof refundSwapRequest.refund.extraData === 'string'\n                            ? Nimiq.BufferUtils.fromAny(refundSwapRequest.refund.extraData)\n                            : refundSwapRequest.refund.extraData,\n                    } : {\n                        ...refundSwapRequest.refund,\n                        type: SwapAsset[refundSwapRequest.refund.type],\n                    },\n                };\n                return parsedRefundSwapRequest;\n            default:\n                return null;\n        }\n    }\n\n    public static raw(request: ParsedRpcRequest)\n        : RpcRequest | null {\n        switch (request.kind) {\n            case RequestType.SIGN_TRANSACTION:\n                const signTransactionRequest = request as ParsedSignTransactionRequest;\n                return {\n                    appName: signTransactionRequest.appName,\n                    sender: signTransactionRequest.sender instanceof Nimiq.Address\n                        ? signTransactionRequest.sender.toUserFriendlyAddress()\n                        // Note: additional sender information is lost and does not survive reloads, see RequestTypes.ts\n                        : signTransactionRequest.sender.address.toUserFriendlyAddress(),\n                    recipient: signTransactionRequest.recipient.toUserFriendlyAddress(),\n                    recipientType: signTransactionRequest.recipientType,\n                    recipientLabel: signTransactionRequest.recipientLabel,\n                    value: signTransactionRequest.value,\n                    fee: signTransactionRequest.fee,\n                    extraData: signTransactionRequest.data,\n                    flags: signTransactionRequest.flags,\n                    validityStartHeight: signTransactionRequest.validityStartHeight,\n                } as SignTransactionRequest;\n            case RequestType.CREATE_CASHLINK:\n                const createCashlinkRequest = request as ParsedCreateCashlinkRequest;\n                // Note that there is no need to export autoTruncateMessage as the message already got truncated\n                return {\n                    appName: createCashlinkRequest.appName,\n                    senderAddress: createCashlinkRequest.senderAddress\n                            ? createCashlinkRequest.senderAddress.toUserFriendlyAddress()\n                            : undefined,\n                    senderBalance: createCashlinkRequest.senderBalance,\n                    value: createCashlinkRequest.value,\n                    message: createCashlinkRequest.message,\n                    theme: createCashlinkRequest.theme,\n                    fiatCurrency: createCashlinkRequest.fiatCurrency,\n                    returnLink: createCashlinkRequest.returnLink,\n                    skipSharing: createCashlinkRequest.skipSharing,\n                } as CreateCashlinkRequest;\n            case RequestType.MANAGE_CASHLINK:\n                const manageCashlinkRequest = request as ParsedManageCashlinkRequest;\n                return {\n                    appName: manageCashlinkRequest.appName,\n                    cashlinkAddress: manageCashlinkRequest.cashlinkAddress\n                        ? manageCashlinkRequest.cashlinkAddress.toUserFriendlyAddress()\n                        : undefined,\n                } as ManageCashlinkRequest;\n            case RequestType.CHECKOUT:\n                const checkoutRequest = request as ParsedCheckoutRequest;\n                switch (checkoutRequest.version) {\n                    case 1:\n                        const nimiqOptions = checkoutRequest.paymentOptions[0] as ParsedNimiqDirectPaymentOptions;\n                        return {\n                            appName: checkoutRequest.appName,\n                            version: 1,\n                            shopLogoUrl: checkoutRequest.shopLogoUrl,\n                            sender: nimiqOptions.protocolSpecific.sender\n                                ? nimiqOptions.protocolSpecific.sender!.toUserFriendlyAddress()\n                                : undefined,\n                            forceSender: nimiqOptions.protocolSpecific.forceSender,\n                            recipient: nimiqOptions.protocolSpecific.recipient\n                                ? nimiqOptions.protocolSpecific.recipient!.toUserFriendlyAddress()\n                                : undefined,\n                            recipientType: nimiqOptions.protocolSpecific.recipientType,\n                            value: nimiqOptions.amount,\n                            fee: nimiqOptions.protocolSpecific.fee,\n                            extraData: nimiqOptions.protocolSpecific.extraData,\n                            flags: nimiqOptions.protocolSpecific.flags,\n                            validityDuration: nimiqOptions.protocolSpecific.validityDuration,\n                            disableDisclaimer: checkoutRequest.disableDisclaimer,\n                        } as NimiqCheckoutRequest;\n                    case 2:\n                        return {\n                            ...checkoutRequest,\n                            paymentOptions: checkoutRequest.paymentOptions.map((option) => option.raw()),\n                        } as MultiCurrencyCheckoutRequest;\n                    }\n            case RequestType.ONBOARD:\n                const onboardRequest = request as ParsedOnboardRequest;\n                return {\n                    appName: onboardRequest.appName,\n                    disableBack: onboardRequest.disableBack,\n                } as OnboardRequest;\n            case RequestType.CHOOSE_ADDRESS:\n                const chooseAddressRequest = request as ParsedChooseAddressRequest;\n                return {\n                    ...chooseAddressRequest,\n                } as ChooseAddressRequest;\n            case RequestType.SIGNUP:\n            case RequestType.LOGIN:\n            case RequestType.MIGRATE:\n            case RequestType.ADD_VESTING_CONTRACT:\n                return {\n                    appName: request.appName,\n                } as BasicRequest;\n            case RequestType.CHANGE_PASSWORD:\n            case RequestType.LOGOUT:\n            case RequestType.ADD_ADDRESS:\n            case RequestType.ACTIVATE_BITCOIN:\n                const simpleRequest = request as ParsedSimpleRequest;\n                return {\n                    appName: simpleRequest.appName,\n                    accountId: simpleRequest.walletId,\n                } as SimpleRequest;\n            case RequestType.EXPORT:\n                const exportRequest = request as ParsedExportRequest;\n                return {\n                    appName: exportRequest.appName,\n                    accountId: exportRequest.walletId,\n                    fileOnly: exportRequest.fileOnly,\n                    wordsOnly: exportRequest.wordsOnly,\n                } as ExportRequest;\n            case RequestType.RENAME:\n                const renameRequest = request as ParsedRenameRequest;\n                return {\n                    appName: renameRequest.appName,\n                    accountId: renameRequest.walletId,\n                    address: renameRequest.address,\n                } as RenameRequest;\n            case RequestType.SIGN_MESSAGE:\n                const signMessageRequest = request as ParsedSignMessageRequest;\n                return {\n                    appName: signMessageRequest.appName,\n                    signer: signMessageRequest.signer ? signMessageRequest.signer.toUserFriendlyAddress() : undefined,\n                    message: signMessageRequest.message,\n                } as SignMessageRequest;\n            case RequestType.SIGN_BTC_TRANSACTION:\n                const signBtcTransactionRequest = request as ParsedSignBtcTransactionRequest;\n                return {\n                    appName: signBtcTransactionRequest.appName,\n                    accountId: signBtcTransactionRequest.walletId,\n                    // Note: input.keyPath is lost on re-parsing and does not survive reloads, see RequestTypes.ts\n                    inputs: signBtcTransactionRequest.inputs,\n                    output: signBtcTransactionRequest.output,\n                    changeOutput: signBtcTransactionRequest.changeOutput,\n                    locktime: signBtcTransactionRequest.locktime,\n                } as SignBtcTransactionRequest;\n            case RequestType.SETUP_SWAP:\n                const setupSwapRequest = request as ParsedSetupSwapRequest;\n                return {\n                    ...setupSwapRequest,\n                    accountId: setupSwapRequest.walletId,\n\n                    // @ts-ignore Type 'Address' is not assignable to type 'string'\n                    fund: setupSwapRequest.fund.type === 'NIM' ? {\n                        ...setupSwapRequest.fund,\n                        sender: setupSwapRequest.fund.sender.toUserFriendlyAddress(),\n                    } : setupSwapRequest.fund,\n\n                    // @ts-ignore Type 'Address' is not assignable to type 'string'\n                    redeem: setupSwapRequest.redeem.type === 'NIM' ? {\n                        ...setupSwapRequest.redeem,\n                        recipient: setupSwapRequest.redeem.recipient.toUserFriendlyAddress(),\n                    } : setupSwapRequest.redeem,\n                } as SetupSwapRequest;\n            case RequestType.REFUND_SWAP:\n                const refundSwapRequest = request as ParsedRefundSwapRequest;\n                return {\n                    ...refundSwapRequest,\n                    accountId: refundSwapRequest.walletId,\n\n                    // @ts-ignore Type 'Address' is not assignable to type 'string'\n                    refund: refundSwapRequest.refund.type === 'NIM' ? {\n                        ...refundSwapRequest.refund,\n                        sender: refundSwapRequest.refund.sender.toUserFriendlyAddress(),\n                        recipient: refundSwapRequest.refund.recipient.toUserFriendlyAddress(),\n                    } : refundSwapRequest.refund,\n                } as RefundSwapRequest;\n            default:\n                return null;\n        }\n    }\n}\n","import { ResponseStatus, RpcServer, State as RpcState } from '@nimiq/rpc';\nimport { BrowserDetection } from '@nimiq/utils';\nimport { RootState } from '@/store';\nimport { Store } from 'vuex';\nimport Router, { Route } from 'vue-router';\nimport {\n    ParsedRpcRequest,\n    ParsedSimpleRequest,\n    ParsedCheckoutRequest,\n    ParsedSignMessageRequest,\n    ParsedSignTransactionRequest,\n} from './RequestTypes';\nimport { RequestParser } from './RequestParser';\nimport { Currency, RequestType, RpcRequest, RpcResult } from './PublicRequestTypes';\nimport { ParsedNimiqDirectPaymentOptions } from './paymentOptions/NimiqPaymentOptions';\nimport {\n    KeyguardClient,\n    KeyguardCommand,\n    Errors as KeyguardErrors,\n    ObjectType,\n    ResultByCommand,\n} from '@nimiq/keyguard-client';\nimport { keyguardResponseRouter, REQUEST_ERROR } from '@/router';\nimport { StaticStore } from '@/lib/StaticStore';\nimport { WalletStore } from './WalletStore';\nimport Cashlink from '@/lib/Cashlink';\nimport CookieJar from '@/lib/CookieJar';\nimport { captureException } from '@sentry/browser';\nimport { ERROR_CANCELED, WalletType } from './Constants';\nimport { includesOrigin } from '@/lib/Helpers';\nimport Config from 'config';\nimport { setHistoryStorage, getHistoryStorage } from '@/lib/Helpers';\n\nexport default class RpcApi {\n    private static get HISTORY_KEY_RPC_STATE() {\n        return 'rpc-api-exported-state';\n    }\n\n    private _server: RpcServer;\n    private _store: Store<RootState>;\n    private _staticStore: StaticStore;\n    private _router: Router;\n    private _keyguardClient: KeyguardClient;\n\n    private _3rdPartyRequestWhitelist: RequestType[] = [\n        RequestType.CHECKOUT,\n        RequestType.SIGN_TRANSACTION,\n        RequestType.SIGN_MESSAGE,\n        RequestType.CHOOSE_ADDRESS,\n        RequestType.CREATE_CASHLINK,\n        RequestType.MANAGE_CASHLINK,\n    ];\n\n    constructor(store: Store<RootState>, staticStore: StaticStore, router: Router) {\n        this._store = store;\n        this._staticStore = staticStore;\n        this._router = router;\n        this._server = new RpcServer('*');\n        this._keyguardClient = new KeyguardClient(Config.keyguardEndpoint);\n\n        // On reload recover any state exported to the current history entry. Note that if we came back from the\n        // Keyguard by history back navigation and rejectOnBack was enabled for the request, the state provided to\n        // _keyguardErrorHandler will overwrite the state here.\n        if (getHistoryStorage(RpcApi.HISTORY_KEY_RPC_STATE)) {\n            this._recoverState(getHistoryStorage(RpcApi.HISTORY_KEY_RPC_STATE));\n        }\n\n        this._registerHubApis([\n            RequestType.SIGN_TRANSACTION,\n            RequestType.CREATE_CASHLINK,\n            RequestType.MANAGE_CASHLINK,\n            RequestType.CHECKOUT,\n            RequestType.ONBOARD,\n            RequestType.SIGNUP,\n            RequestType.LOGIN,\n            RequestType.EXPORT,\n            RequestType.CHANGE_PASSWORD,\n            RequestType.LOGOUT,\n            RequestType.ADD_ADDRESS,\n            RequestType.RENAME,\n            RequestType.ADD_VESTING_CONTRACT,\n            RequestType.SIGN_MESSAGE,\n            RequestType.MIGRATE,\n            RequestType.CHOOSE_ADDRESS,\n            RequestType.SIGN_BTC_TRANSACTION,\n            RequestType.ACTIVATE_BITCOIN,\n            RequestType.SETUP_SWAP,\n            RequestType.REFUND_SWAP,\n        ]);\n        this._registerKeyguardApis([\n            KeyguardCommand.SIGN_TRANSACTION,\n            KeyguardCommand.CREATE,\n            KeyguardCommand.IMPORT,\n            KeyguardCommand.EXPORT,\n            KeyguardCommand.CHANGE_PASSWORD,\n            KeyguardCommand.REMOVE,\n            KeyguardCommand.DERIVE_ADDRESS,\n            KeyguardCommand.SIGN_MESSAGE,\n            KeyguardCommand.SIGN_BTC_TRANSACTION,\n            KeyguardCommand.DERIVE_BTC_XPUB,\n            KeyguardCommand.SIGN_SWAP,\n        ]);\n\n        this._router.beforeEach((to: Route, from: Route, next: (arg?: string | false | Route) => void) => {\n            // There is an intial redirect from '/' to '/' which does not need to be handled at all.\n            if (to.name === REQUEST_ERROR || (to.path === '/' && from.path === '/')) {\n                next();\n                return;\n            }\n\n            // If the navigation call already contains an rpcId, do not replace it.\n            if ( to.query.rpcId ) {\n                next();\n                return;\n            }\n\n            const rpcId = from.query.rpcId || this._parseUrlParams(window.location.search).rpcId;\n            // In case no rpcId can be found, the request is not functional and needs to be rejected.\n            if (!rpcId) {\n                this.reject(new Error('UNEXPECTED: RpcId not present'));\n                next(false);\n                return;\n            }\n\n            next({\n                ...to,\n                query: {\n                    ...to.query,\n                    rpcId,\n                },\n            });\n        });\n\n        this._router.afterEach((to: Route, from: Route) => {\n            // There is an intial redirect from '/' to '/' which does not need to be handled at all.\n            if (to.path === '/' && from.path === '/') {\n                return;\n            }\n            // If we have an rpcState, export the entire state to the newly pushed history entry\n            // to be available on reload.\n            // This is potentially redundand to the above condition but added as a precaution,\n            // especially considering the no-request case a few lines down within RpcApi.start().\n            if (this._staticStore.rpcState) {\n                // A small timeout is needed, since Vue does push the new history state only after the afterEach\n                // hooks are executed, thus overwriting any state set in these hooks.\n                window.setTimeout(() => setHistoryStorage(RpcApi.HISTORY_KEY_RPC_STATE, this._exportState()), 10);\n            }\n        });\n    }\n\n    public start() {\n        this._keyguardClient.init().catch(console.error); // TODO: Provide better error handling here\n        if (this._store.state.keyguardResult) return;\n\n        // If there is no request:\n        // If no opener is set and there is a previous history entry and there is no data passed in the URL,\n        // redirect to Safe. Otherwise, show error page.\n        const onClientTimeout = () => {\n            if (window.opener === null && window.history.length > 1 && !window.location.hash) {\n                location.href = Config.redirectTarget;\n            } else {\n                this._router.replace({name: REQUEST_ERROR});\n            }\n        };\n        this._server.init(onClientTimeout);\n    }\n\n    public createKeyguardClient(handleHistoryBack?: boolean) {\n        const localState = this._exportState();\n        const client = new KeyguardClient(\n            Config.keyguardEndpoint,\n            window.location.origin,\n            localState,\n            undefined, // preserveRequests: keep default behavior, which is true for redirects but false for postMessage\n            handleHistoryBack,\n        );\n        if (!handleHistoryBack) {\n            // The Keyguard client rejects on history back only if handleHistoryBack is activated. If the Keyguard does\n            // not reject it also does not provide us the localState to recover. For this case, we encode it manually in\n            // the history, to retrieve it from there.\n            setHistoryStorage(RpcApi.HISTORY_KEY_RPC_STATE, this._exportState());\n        }\n        return client;\n    }\n\n    public resolve(result: RpcResult) {\n        this._reply(ResponseStatus.OK, result);\n    }\n\n    public reject(error: Error) {\n        const ignoredErrorTypes = [ KeyguardErrors.Types.INVALID_REQUEST.toString() ];\n        const ignoredErrors = [ ERROR_CANCELED, 'Request aborted', 'WalletId not found', 'Address not found' ];\n        if (ignoredErrorTypes.indexOf(error.name) < 0 && ignoredErrors.indexOf(error.message) < 0) {\n            if (Config.reportToSentry) {\n                console.debug('Request:', JSON.stringify(this._staticStore.request));\n                captureException(error);\n            }\n        }\n\n        this._reply(ResponseStatus.ERROR, error);\n    }\n\n    public get keyguardClient(): KeyguardClient {\n        return this._keyguardClient;\n    }\n\n    private async _reply(status: ResponseStatus, result: RpcResult | Error) {\n        // Update cookies for iOS\n        if (BrowserDetection.isIOS() || BrowserDetection.isSafari()) {\n            const wallets = await WalletStore.Instance.list();\n            CookieJar.fill(wallets);\n        }\n\n        // Check for originalRouteName in StaticStore and route there\n        const originalRoute = this._staticStore.originalRouteName;\n        if (originalRoute && (!(result instanceof Error) || result.message !== ERROR_CANCELED)) {\n            this._staticStore.sideResult = result;\n            this._store.commit('setKeyguardResult', null);\n\n            // Recreate original URL with original query parameters\n            const rpcState = this._staticStore.rpcState!;\n            const query = { rpcId: rpcState.id.toString() };\n            delete this._staticStore.originalRouteName;\n            this._router.push({name: originalRoute, query});\n            return;\n        }\n\n        this._staticStore.rpcState!.reply(status, result);\n    }\n\n    private _exportState(): any {\n        return {\n            rpcState: this._staticStore.rpcState!.toJSON(),\n            request: this._staticStore.request ? RequestParser.raw(this._staticStore.request) : undefined,\n            kind: this._staticStore.request ? this._staticStore.request.kind : undefined,\n            keyguardRequest: this._staticStore.keyguardRequest,\n            originalRouteName: this._staticStore.originalRouteName,\n            cashlink: this._staticStore.cashlink ? this._staticStore.cashlink.toObject() : undefined,\n        };\n    }\n\n    private _registerHubApis(requestTypes: RequestType[]) {\n        for (const requestType of requestTypes) {\n            // Server listener\n            this._server.onRequest(requestType, (state, arg) => this._hubApiHandler(requestType, state, arg));\n        }\n    }\n\n    private async _hubApiHandler(requestType: RequestType, state: RpcState, arg: RpcRequest) {\n        let request: ParsedRpcRequest | undefined;\n\n        if ( // Check that a non-whitelisted request comes from a privileged origin\n            !this._3rdPartyRequestWhitelist.includes(requestType)\n            && !includesOrigin(Config.privilegedOrigins, state.origin)\n        ) {\n            state.reply(ResponseStatus.ERROR, new Error(`${state.origin} is unauthorized to call ${requestType}`));\n            return;\n        }\n\n        this._staticStore.rpcState = state;\n        try {\n            request = RequestParser.parse(arg, state, requestType) || undefined;\n            this._staticStore.request = request;\n        } catch (error) {\n            this.reject(error);\n            return;\n        }\n\n        const wallets = await WalletStore.Instance.list();\n        if (!wallets.length) {\n            const hasLegacyAccounts = (await this._keyguardClient.hasLegacyAccounts()).success;\n            if (hasLegacyAccounts) {\n                // Keyguard has legacy accounts, redirect to migration\n                if (requestType !== RequestType.MIGRATE) {\n                    this._staticStore.originalRouteName = requestType;\n                }\n                this._router.replace({name: RequestType.MIGRATE});\n                this._startRoute();\n                return;\n            }\n        }\n\n        let account;\n        // Simply testing if the property exists (with `'walletId' in request`) is not enough,\n        // as `undefined` also counts as existing.\n        if (request) {\n            let accountRequired: boolean | undefined;\n            let errorMsg = 'Address not found'; // Error message for all cases but the first\n            // Note that we don't check for btc addresses here. Instead, btc request handlers check whether the address\n            // can be derived.\n            if ((request as ParsedSimpleRequest).walletId) {\n                accountRequired = true;\n                account = await WalletStore.Instance.get((request as ParsedSimpleRequest).walletId);\n                errorMsg = 'AccountId not found';\n            } else if (requestType === RequestType.SIGN_TRANSACTION) {\n                accountRequired = true;\n                const parsedSignTransactionRequest = request as ParsedSignTransactionRequest;\n                const address = parsedSignTransactionRequest.sender instanceof Nimiq.Address\n                    ? parsedSignTransactionRequest.sender\n                    : parsedSignTransactionRequest.sender.address;\n                account = this._store.getters.findWalletByAddress(address.toUserFriendlyAddress(), true);\n            } else if (requestType === RequestType.SIGN_MESSAGE) {\n                accountRequired = false; // Sign message allows user to select an account\n                const address = (request as ParsedSignMessageRequest).signer;\n                if (address) {\n                    account = this._store.getters.findWalletByAddress(address.toUserFriendlyAddress(), false);\n                }\n            } else if (requestType === RequestType.CHECKOUT) {\n                const checkoutRequest = request as ParsedCheckoutRequest;\n                // forceSender only applies to NIM-only checkouts.\n                if (checkoutRequest.paymentOptions.length === 1\n                    && checkoutRequest.paymentOptions[0].currency === Currency.NIM) {\n\n                    /**\n                     * Later on can potentially be ParsedNimiqOasisPaymentOptions.\n                     * If it will contain the forceSender flag as well it should not be an issue.\n                     */\n                    const protocolSpecific =\n                        (checkoutRequest.paymentOptions[0] as ParsedNimiqDirectPaymentOptions).protocolSpecific;\n\n                    accountRequired = protocolSpecific.forceSender;\n                    if (protocolSpecific.sender) {\n                        account = this._store.getters.findWalletByAddress(\n                            protocolSpecific.sender.toUserFriendlyAddress(),\n                            true,\n                        );\n                    }\n                }\n            }\n            if (accountRequired && !account) {\n                this.reject(new Error(errorMsg));\n                return;\n            }\n        }\n\n        this._startRoute();\n\n        if (location.pathname !== '/') {\n            // Don't jump back to request's initial view on reload when navigated to a subsequent view.\n            // E.g. if the user switches from Checkout to Import, don't jump back to Checkout on reload.\n            return;\n        }\n\n        if (account && account.type === WalletType.LEDGER\n            && this._router.getMatchedComponents({ name: `${requestType}-ledger` }).length > 0) {\n            this._router.replace({name: `${requestType}-ledger`});\n        } else {\n            this._router.replace({name: requestType});\n        }\n    }\n\n    private _parseUrlParams(query: string) {\n        const params: {[key: string]: string} = {};\n        if (!query) return params;\n        const keyValues = query.substr(1).replace(/\\+/g, ' ').split('&')\n            .map((keyValueString) => keyValueString.split('='));\n\n        for (const keyValue of keyValues) {\n            // @ts-ignore Property 'decodeURIComponent' does not exist on type 'Window'\n            params[keyValue[0]] = window.decodeURIComponent(keyValue[1]);\n        }\n\n        return params;\n    }\n\n    private _recoverState(storedState: any) {\n        const rpcState = RpcState.fromJSON(storedState.rpcState);\n        const request = RequestParser.parse(storedState.request, rpcState, storedState.kind);\n        const keyguardRequest = storedState.keyguardRequest;\n        const originalRouteName = storedState.originalRouteName;\n        const cashlink = storedState.cashlink ? Cashlink.fromObject(storedState.cashlink) : undefined;\n\n        this._staticStore.rpcState = rpcState;\n        this._staticStore.request = request || undefined;\n        this._staticStore.keyguardRequest = keyguardRequest;\n        this._staticStore.originalRouteName = originalRouteName;\n        this._staticStore.cashlink = cashlink;\n    }\n\n    private _registerKeyguardApis(commands: KeyguardCommand[]) {\n        for (const command of commands) {\n            // Server listener\n            this._keyguardClient.on(command,\n                (result, state) => this._keyguardSuccessHandler(command, result, state),\n                (error, state) => this._keyguardErrorHandler(command, error, state),\n            );\n        }\n    }\n\n    private _keyguardSuccessHandler<C extends KeyguardCommand>(\n        command: C,\n        result: ResultByCommand<C>,\n        state?: ObjectType | null,\n    ) {\n        // Recover state\n        this._recoverState(state);\n\n        // Set result\n        this._store.commit('setKeyguardResult', result);\n\n        // To enable the keyguardResponseRouter to decide correctly to which route it should direct\n        // when returning from the Keyguard's sign-transaction request, the original request kind that\n        // was given to the Hub is passed here and the keyguardResponseRouter is turned\n        // from an object into a function instead.\n        this._router.replace({name: keyguardResponseRouter(command, this._staticStore.request!.kind).resolve});\n\n        this._startRoute();\n    }\n\n    private _keyguardErrorHandler(command: KeyguardCommand, error: Error, state: any) {\n        // Recover state\n        this._recoverState(state);\n\n        // Set result\n        this._store.commit('setKeyguardResult', error);\n\n        if (error.message === KeyguardErrors.Messages.CANCELED) {\n            this.reject(error);\n            return;\n        }\n\n        if (error.message === 'Request aborted') {\n            /*\n             * In case the window is a popup and the recovered state is the one with which the popup was\n             * initialized (has a source), then reject it. The popup will be closed as a result.\n             * If not, there was another history entry in between, where a history.back() will navigate to,\n             * not closing the popup in the process.\n             */\n            if (this._staticStore.rpcState!.source && window.opener) {\n                this.reject(error);\n            } else {\n                window.history.back();\n            }\n            return;\n        }\n\n        this._startRoute();\n\n        if (error.message === KeyguardErrors.Messages.EXPIRED) {\n            // Don't reject but navigate to checkout to display the expiration warning there.\n            this._router.replace({ name: RequestType.CHECKOUT });\n            return;\n        }\n\n        this._router.replace({name: keyguardResponseRouter(command, this._staticStore.request!.kind).reject});\n    }\n\n    private _startRoute() {\n        this._store.commit('setRequestLoaded', !!(this._staticStore.rpcState && this._staticStore.request));\n    }\n}\n","import Vue from 'vue';\nimport { createDecorator } from 'vue-class-component';\nimport { ParsedRpcRequest } from './RequestTypes';\nimport { RpcResult, RequestType } from './PublicRequestTypes';\nimport { State as RpcState } from '@nimiq/rpc';\nimport { Request as KeyguardRequest } from '@nimiq/keyguard-client';\nimport Cashlink from '../lib/Cashlink';\n\nexport class StaticStore {\n    private static instance: StaticStore;\n\n    public static get Instance() {\n        if (!this.instance) this.instance = new StaticStore();\n        return this.instance;\n    }\n\n    // To assist TypeScript, we define possible properties here\n    public request?: ParsedRpcRequest;\n    public kind?: RequestType;\n    public rpcState?: RpcState;\n    public keyguardRequest?: KeyguardRequest;\n    public originalRouteName?: string;\n    public sideResult?: RpcResult | Error;\n    public cashlink?: Cashlink;\n}\n\n// Decorator is capitalized to be consistent with vuex decorators\n// tslint:disable-next-line variable-name\nexport const Static = <V extends Vue>(target: V, keyName: string) => {\n    return createDecorator((componentOptions, key: string) => {\n        if (!componentOptions.computed) {\n            componentOptions.computed = {};\n        }\n\n        componentOptions.computed[key] = () => {\n            // @ts-ignore\n            return StaticStore.Instance[key];\n        };\n    })(target, keyName);\n};\n\nexport default StaticStore.Instance;\n","import { Currency, PaymentType, PaymentOptions } from '../PublicRequestTypes';\nimport { ParsedPaymentOptions, PaymentOptionsParserFlags } from './ParsedPaymentOptions';\nimport { toNonScientificNumberString } from '@nimiq/utils';\nimport { i18n } from '../../i18n/i18n-setup';\n\nexport interface BitcoinSpecifics {\n    fee?: number | string;\n    feePerByte?: number | string;\n    recipient?: string;\n}\n\nexport type ParsedBitcoinSpecifics = Pick<BitcoinSpecifics, 'recipient'> & {\n    fee?: number;\n    feePerByte?: number;\n};\n\nexport type BitcoinDirectPaymentOptions = PaymentOptions<Currency.BTC, PaymentType.DIRECT>;\n\nexport class ParsedBitcoinDirectPaymentOptions extends ParsedPaymentOptions<Currency.BTC, PaymentType.DIRECT> {\n    public amount: number;\n\n    public constructor(options: BitcoinDirectPaymentOptions, parserFlags: PaymentOptionsParserFlags = {}) {\n        super(options, parserFlags);\n        this.amount = parseInt(toNonScientificNumberString(options.amount), 10);\n\n        let feePerByte: number | undefined;\n        if (options.protocolSpecific.feePerByte !== undefined) {\n            try {\n                feePerByte = parseFloat(toNonScientificNumberString(options.protocolSpecific.feePerByte));\n            } catch (e) {\n                throw new Error('If provided, feePerByte must be a valid number');\n            }\n        }\n\n        let fee: number | undefined;\n        if (options.protocolSpecific.fee !== undefined) {\n            if (!this.isNonNegativeInteger(options.protocolSpecific.fee)) {\n                throw new Error('If provided, fee must be a non-negative integer');\n            }\n            fee = parseInt(toNonScientificNumberString(options.protocolSpecific.fee), 10);\n        }\n\n        if (feePerByte === undefined && fee !== undefined) {\n            throw new Error('If fee is provided, feePerByte must be provided too. The reasoning behind this is that ' +\n                'the actual transaction speed depends on feePerByte rather than on fee. Therefore the feePerByte' +\n                'that the fee was calculated from should be provided.');\n        } else if (feePerByte !== undefined && fee === undefined) {\n            // estimate the fee from feePerByte\n            fee = feePerByte * 250; // 250 is the estimated size for a standard tx with two inputs and one output\n        }\n\n        if (options.protocolSpecific.recipient && typeof options.protocolSpecific.recipient !== 'string') {\n            // TODO add btc address validation here?\n            throw new Error('If a recipient is provided it must be a string');\n        }\n\n        this.protocolSpecific = {\n            fee,\n            feePerByte,\n            recipient: options.protocolSpecific.recipient,\n        };\n    }\n\n    public get currency(): Currency.BTC {\n        return Currency.BTC;\n    }\n\n    public get type(): PaymentType.DIRECT {\n        return PaymentType.DIRECT;\n    }\n\n    public get decimals(): number {\n        return 8;\n    }\n\n    public get total(): number {\n        return (this.amount + this.fee);\n    }\n\n    public get fee(): number {\n        return this.protocolSpecific.fee || 0;\n    }\n\n    public get feeString(): string {\n        if (this.protocolSpecific.feePerByte) {\n            const fee = Math.ceil((this.protocolSpecific.feePerByte) * 100) / 100;\n            return fee !== 0 ? i18n.t('Apply a network fee of at least {fee} sat/byte.', { fee }) as string : '';\n        }\n        return '';\n    }\n\n    public fiatFee(fiatAmount: number): number {\n        if (!this.amount || !fiatAmount) {\n            throw new Error('amount and fiatAmount must be provided');\n        }\n        if (!this.fee) {\n            return 0;\n        }\n        return this.fee * fiatAmount / this.amount;\n    }\n\n    public raw(): BitcoinDirectPaymentOptions {\n        return {\n            currency: this.currency,\n            type: this.type,\n            expires: this.expires,\n            amount: this.amount.toString(),\n            vendorMarkup: this.vendorMarkup,\n            protocolSpecific: this.protocolSpecific,\n        };\n    }\n}\n","import bigInt from 'big-integer';\nimport { Currency, PaymentType, PaymentOptions } from '../PublicRequestTypes';\nimport { ParsedPaymentOptions, PaymentOptionsParserFlags } from './ParsedPaymentOptions';\nimport { toNonScientificNumberString, FormattableNumber } from '@nimiq/utils';\nimport { i18n } from '../../i18n/i18n-setup';\n\nexport interface EtherSpecifics {\n    gasLimit?: number | string;\n    gasPrice?: string;\n    recipient?: string;\n}\n\nexport type ParsedEtherSpecifics = Pick<EtherSpecifics, 'recipient'> & {\n    gasLimit?: number;\n    gasPrice?: bigInt.BigInteger;\n};\n\nexport type EtherDirectPaymentOptions = PaymentOptions<Currency.ETH, PaymentType.DIRECT>;\n\nexport class ParsedEtherDirectPaymentOptions extends ParsedPaymentOptions<Currency.ETH, PaymentType.DIRECT> {\n    public amount: bigInt.BigInteger;\n\n    public constructor(options: EtherDirectPaymentOptions, parserFlags: PaymentOptionsParserFlags = {}) {\n        super(options, parserFlags);\n        this.amount = bigInt(options.amount); // note that bigInt resolves scientific notation like 2e3 automatically\n\n        let gasLimit: number | undefined;\n        if (options.protocolSpecific.gasLimit !== undefined) {\n            if (!this.isNonNegativeInteger(options.protocolSpecific.gasLimit)) {\n                throw new Error('If provided, gasLimit must be a non-negative integer');\n            }\n            gasLimit = parseInt(toNonScientificNumberString(options.protocolSpecific.gasLimit), 10);\n        }\n\n        let gasPrice: bigInt.BigInteger | undefined;\n        if (options.protocolSpecific.gasPrice !== undefined) {\n            if (!this.isNonNegativeInteger(options.protocolSpecific.gasPrice)) {\n                throw new Error('If provided, gasPrice must be a non-negative integer');\n            }\n            gasPrice = bigInt(options.protocolSpecific.gasPrice);\n        }\n\n        if (options.protocolSpecific.recipient && typeof options.protocolSpecific.recipient !== 'string') {\n            // TODO add eth address validation here?\n            throw new Error('If a recipient is provided it must be of type string');\n        }\n\n        this.protocolSpecific = {\n            gasLimit,\n            gasPrice,\n            recipient: options.protocolSpecific.recipient,\n        };\n    }\n\n    public get currency(): Currency.ETH {\n        return Currency.ETH;\n    }\n\n    public get type(): PaymentType.DIRECT {\n        return PaymentType.DIRECT;\n    }\n\n    public get decimals(): number {\n        return 18;\n    }\n\n    public get total(): bigInt.BigInteger {\n        return this.amount.add(this.fee);\n    }\n\n    public get fee(): bigInt.BigInteger {\n        return this.protocolSpecific.gasPrice!.times(this.protocolSpecific.gasLimit!) || bigInt(0);\n    }\n\n    public get feeString(): string {\n        if (this.protocolSpecific.gasPrice) {\n            const fee = new FormattableNumber(this.protocolSpecific.gasPrice)\n                .moveDecimalSeparator(-9).toString({ maxDecimals: 2 });\n            return fee !== '0' ? i18n.t('Apply a gas price of at least {fee} gwei.', { fee }) as string : '';\n        }\n        return '';\n    }\n\n    public fiatFee(fiatAmount: number): number {\n        if (this.fee.isZero()) {\n            return 0;\n        }\n\n        if (!this.amount || !fiatAmount) {\n            throw new Error('amount and fiatAmount must be provided');\n        }\n\n        const decimalMatch = toNonScientificNumberString(fiatAmount).match(/(?:\\D)(\\d+)$/);\n        const decimalCount = decimalMatch ? decimalMatch[1].length : 0;\n        const conversionFactor = 10 ** decimalCount; // convert amount to smallest unit for bigint calculations\n        return this.fee\n            .times(bigInt(Math.round(fiatAmount * conversionFactor)))\n            .divide(this.amount) // integer division loss of precision here.\n            .valueOf() / conversionFactor;\n    }\n\n    public raw(): EtherDirectPaymentOptions {\n        return {\n            currency: this.currency,\n            type: this.type,\n            expires: this.expires,\n            amount: this.amount.toString(),\n            vendorMarkup: this.vendorMarkup,\n            protocolSpecific: {\n                gasLimit: this.protocolSpecific.gasLimit,\n                gasPrice: this.protocolSpecific.gasPrice\n                    ? this.protocolSpecific.gasPrice.toString()\n                    : undefined,\n                recipient: this.protocolSpecific.recipient,\n            },\n        };\n    }\n}\n","import { TX_VALIDITY_WINDOW, TX_MIN_VALIDITY_DURATION } from '../Constants';\nimport { Currency, PaymentType, PaymentOptions } from '../PublicRequestTypes';\nimport { ParsedPaymentOptions, PaymentOptionsParserFlags } from './ParsedPaymentOptions';\nimport { toNonScientificNumberString, Utf8Tools } from '@nimiq/utils';\n\nexport interface NimiqSpecifics {\n    fee?: number | string;\n    feePerByte?: number | string;\n    extraData?: Uint8Array | string;\n    validityDuration?: number;\n    flags?: number;\n    sender?: string;\n    forceSender?: boolean;\n    recipient?: string;\n    recipientType?: Nimiq.Account.Type;\n}\n\nexport type ParsedNimiqSpecifics = Omit<NimiqSpecifics, 'sender' | 'recipient' | 'fee' | 'feePerByte' | 'extraData'>\n    & Required<Pick<NimiqSpecifics, 'forceSender' | 'flags' | 'validityDuration'>> & {\n    sender?: Nimiq.Address,\n    recipient?: Nimiq.Address,\n    fee?: number,\n    feePerByte?: number,\n    extraData?: Uint8Array,\n};\n\nexport type NimiqDirectPaymentOptions = PaymentOptions<Currency.NIM, PaymentType.DIRECT>;\n\nexport class ParsedNimiqDirectPaymentOptions extends ParsedPaymentOptions<Currency.NIM, PaymentType.DIRECT> {\n    public amount: number;\n\n    public constructor(options: NimiqDirectPaymentOptions, parserFlags: PaymentOptionsParserFlags = {}) {\n        super(options, parserFlags);\n\n        this.amount = parseInt(toNonScientificNumberString(options.amount), 10);\n\n        if (options.protocolSpecific.extraData !== undefined && typeof options.protocolSpecific.extraData !== 'string'\n            && !(options.protocolSpecific.extraData instanceof Uint8Array)) {\n            throw new Error('extraData must be a string or Uint8Array');\n        }\n        const extraData = typeof options.protocolSpecific.extraData === 'string'\n            ? Utf8Tools.stringToUtf8ByteArray(options.protocolSpecific.extraData)\n            : options.protocolSpecific.extraData;\n\n        let sender: Nimiq.Address | undefined;\n        if (options.protocolSpecific.sender !== undefined) {\n            try {\n                sender = Nimiq.Address.fromString(options.protocolSpecific.sender);\n            } catch (err) {\n                throw new Error('If provided, sender must be a valid user friendly address string');\n            }\n        }\n\n        let recipient: Nimiq.Address | undefined;\n        if (options.protocolSpecific.recipient !== undefined) {\n            try {\n                recipient = Nimiq.Address.fromString(options.protocolSpecific.recipient);\n            } catch (err) {\n                throw new Error('If provided, recipient must be a valid user friendly address string');\n            }\n        }\n\n        let recipientType: Nimiq.Account.Type | undefined;\n        if (options.protocolSpecific.recipientType !== undefined) {\n            if (!Object.values(Nimiq.Account.Type).includes(options.protocolSpecific.recipientType)) {\n                throw new Error('If provided, recipientType must be a valid Nimiq account type');\n            }\n            recipientType = options.protocolSpecific.recipientType;\n        }\n\n        const flags = options.protocolSpecific.flags;\n        if (flags !== undefined && typeof flags !== 'number') {\n            throw new Error('If provided, flags must be a number.');\n        }\n\n        let feePerByte: number | undefined;\n        if (options.protocolSpecific.feePerByte !== undefined) {\n            try {\n                feePerByte = parseFloat(toNonScientificNumberString(options.protocolSpecific.feePerByte));\n            } catch (e) {\n                throw new Error('If provided, feePerByte must be a valid number');\n            }\n        }\n\n        let fee: number | undefined;\n        if (options.protocolSpecific.fee !== undefined) {\n            if (!this.isNonNegativeInteger(options.protocolSpecific.fee)) {\n                throw new Error('If provided, fee must be a non-negative integer');\n            }\n            fee = parseInt(toNonScientificNumberString(options.protocolSpecific.fee), 10);\n        }\n\n        const requiresExtendedTransaction = extraData && extraData.byteLength > 0\n            || (recipientType !== undefined && recipientType !== Nimiq.Account.Type.BASIC)\n            || (flags !== undefined && flags !== Nimiq.Transaction.Flag.NONE);\n        // Note that the transaction size can be bigger than this, for example if the sender type the user wants\n        // to use requires an extended transaction or if an extended transaction includes a multi signature proof.\n        // The size is therefore just an estimate. In the majority of cases the estimate will be accurate though\n        // and a fee that is slightly off will generally not be a problem.\n        const estimatedTransactionSize = requiresExtendedTransaction\n            ? 166 + (extraData ? extraData.byteLength : 0)\n            : 138;\n\n        // feePerByte takes precedence over fee as it is the more meaningful value for the transaction and its speed.\n        if (feePerByte === undefined) {\n            if (fee === undefined) {\n                if (!this.parserFlags.isUpdate) {\n                    // Do not enforce default fees on update which would overwrite our previous fee.\n                    feePerByte = 0;\n                    fee = 0;\n                }\n            } else {\n                feePerByte = fee / estimatedTransactionSize;\n            }\n        } else {\n            fee = Math.ceil(feePerByte * estimatedTransactionSize);\n        }\n\n        if (options.protocolSpecific.validityDuration !== undefined\n            && options.protocolSpecific.validityDuration <= 0) {\n            throw new Error('If provided, validityDuration must be a positive integer.');\n        }\n\n        // Check for required requested transaction properties which we can not guarantee for external payments. On\n        // properties which do not strictly need to be fulfilled like exact fee, validityDuration or sender without\n        // forceSender we are more lenient.\n        if (this.parserFlags.isPointOfSale && (\n            options.protocolSpecific.forceSender\n            || (recipientType !== undefined && recipientType !== Nimiq.Account.Type.BASIC)\n            || (flags !== undefined && flags !== Nimiq.Transaction.Flag.NONE)\n            || (extraData && !Utf8Tools.isValidUtf8(extraData)) // only allow string data\n        )) {\n            throw new Error('isPointOfSale was set but requested sender, recipientType, flags or extraData can not '\n                + 'be guaranteed for an external payment.');\n        }\n\n        this.protocolSpecific = {\n            sender,\n            forceSender: !!options.protocolSpecific.forceSender,\n            fee,\n            feePerByte,\n            extraData,\n            flags: flags || Nimiq.Transaction.Flag.NONE,\n            recipient,\n            recipientType,\n            validityDuration: !options.protocolSpecific.validityDuration\n                ? TX_VALIDITY_WINDOW\n                : Math.min(\n                    TX_VALIDITY_WINDOW,\n                    Math.max(\n                        TX_MIN_VALIDITY_DURATION,\n                        options.protocolSpecific.validityDuration,\n                    ),\n                ),\n        };\n    }\n\n    public get currency(): Currency.NIM {\n        return Currency.NIM;\n    }\n\n    public get type(): PaymentType.DIRECT {\n        return PaymentType.DIRECT;\n    }\n\n    public get decimals(): number {\n        return 5;\n    }\n\n    public get total(): number {\n        return this.amount + this.fee;\n    }\n\n    public get fee(): number {\n        return this.protocolSpecific.fee || 0;\n    }\n\n    public fiatFee(fiatAmount: number): number {\n        if (!this.fee) {\n            return 0;\n        }\n        if (!this.amount || !fiatAmount) {\n            throw new Error('amount and fiatAmount must be provided');\n        }\n        return this.fee * fiatAmount / this.amount;\n    }\n\n    public raw(): NimiqDirectPaymentOptions {\n        return {\n            currency: this.currency,\n            type: this.type,\n            expires: this.expires,\n            amount: this.amount.toString(),\n            vendorMarkup: this.vendorMarkup,\n            protocolSpecific: {\n                recipient: this.protocolSpecific.recipient\n                    ? this.protocolSpecific.recipient.toUserFriendlyAddress()\n                    : undefined,\n                fee: this.protocolSpecific.fee,\n                feePerByte: this.protocolSpecific.feePerByte,\n                extraData: this.protocolSpecific.extraData,\n                validityDuration: this.protocolSpecific.validityDuration,\n                sender: this.protocolSpecific.sender\n                    ? this.protocolSpecific.sender.toUserFriendlyAddress()\n                    : undefined,\n                flags: this.protocolSpecific.flags,\n                recipientType: this.protocolSpecific.recipientType,\n                forceSender: !!this.protocolSpecific.forceSender,\n            },\n        };\n    }\n}\n","import type { BigInteger } from 'big-integer'; // imports only the type without bundling\nimport { FormattableNumber, toNonScientificNumberString } from '@nimiq/utils';\nimport { isMilliseconds } from '../Helpers';\nimport {\n    Currency,\n    PaymentType,\n    PaymentOptionsForCurrencyAndType,\n} from '../PublicRequestTypes';\nimport {\n    ParsedPaymentOptionsForCurrencyAndType,\n    ParsedProtocolSpecificsForCurrency,\n} from '../RequestTypes';\n\nexport interface PaymentOptionsParserFlags {\n    isUpdate?: boolean;\n    isPointOfSale?: boolean;\n}\n\nexport interface ParsedPaymentOptions<C extends Currency, T extends PaymentType> {\n    protocolSpecific: ParsedProtocolSpecificsForCurrency<C>;\n    amount: number | BigInteger;\n    vendorMarkup?: number;\n    expires?: number;\n    constructor: ParsedPaymentOptionsForCurrencyAndType<C, T>;\n    new(options: PaymentOptionsForCurrencyAndType<C, T>, parserFlags: PaymentOptionsParserFlags):\n        ParsedPaymentOptionsForCurrencyAndType<C, T>;\n}\n\nexport abstract class ParsedPaymentOptions<C extends Currency, T extends PaymentType>\nimplements ParsedPaymentOptions<C, T> {\n    protected parserFlags: PaymentOptionsParserFlags;\n\n    protected constructor(options: PaymentOptionsForCurrencyAndType<C, T>, parserFlags: PaymentOptionsParserFlags) {\n        // @ts-ignore: Accessing abstract properties currency and type\n        if (options.currency !== this.currency || options.type !== this.type) {\n            throw new Error(`Cannot parse given options as ${this.constructor.name}.`);\n        }\n        if (!this.isNonNegativeInteger(options.amount)) {\n            throw new Error('Amount must be a non-negative integer');\n        }\n        if (options.vendorMarkup !== undefined\n            && (typeof options.vendorMarkup !== 'number'\n                || !Number.isFinite(options.vendorMarkup)\n                || options.vendorMarkup <= -1)\n        ) {\n            throw new Error('If provided, vendorMarkup must be a finite number > -1');\n        }\n        this.vendorMarkup = options.vendorMarkup;\n        this.expires = typeof options.expires === 'number'\n            ? isMilliseconds(options.expires)\n                ? options.expires\n                : options.expires * 1000\n            : undefined;\n        this.parserFlags = parserFlags;\n    }\n\n    public abstract get currency(): C;\n    public abstract get type(): T;\n    public abstract get decimals(): number;\n\n    public get baseUnitAmount(): string {\n        return new FormattableNumber(this.amount).moveDecimalSeparator(-this.decimals).toString();\n    }\n\n    public update<P extends ParsedPaymentOptions<C, T>>(\n        this: P,\n        options: PaymentOptionsForCurrencyAndType<C, T>,\n        ...additionalArgs: any[]\n    ) {\n        // Parse to check validity.\n        const parsedOptions = new this.constructor(options as any, { ...this.parserFlags, isUpdate: true });\n        this.amount = parsedOptions.amount; // amount must exist on all parsed options\n        this.vendorMarkup = parsedOptions.vendorMarkup !== undefined ? parsedOptions.vendorMarkup : this.vendorMarkup;\n        this.expires = parsedOptions.expires || this.expires;\n        for (const key of\n            Object.keys(parsedOptions.protocolSpecific) as Array<keyof typeof parsedOptions.protocolSpecific>) {\n            if (parsedOptions.protocolSpecific[key] === undefined) continue;\n            this.protocolSpecific[key] = parsedOptions.protocolSpecific[key];\n        }\n    }\n\n    public abstract raw(): PaymentOptionsForCurrencyAndType<C, T>;\n\n    protected isNonNegativeInteger(value: string | number | bigint | BigInteger) {\n        try {\n            return /^\\d+$/.test(toNonScientificNumberString(value));\n        } catch (e) {\n            return false;\n        }\n    }\n}\n","import Vue from 'vue';\nimport { BrowserDetection } from '@nimiq/utils';\nimport { setAssetPublicPath as setVueComponentsAssetPath } from '@nimiq/vue-components';\nimport App from './App.vue';\nimport router from './router';\nimport store from './store';\nimport staticStore from '@/lib/StaticStore';\nimport RpcApi from '@/lib/RpcApi';\nimport { startSentry } from './lib/Sentry';\nimport { i18n, setLanguage, detectLanguage } from './i18n/i18n-setup';\n\nif (window.hasBrowserWarning) {\n    throw new Error('Execution aborted due to browser warning');\n}\n\nif ((BrowserDetection.isIOS() || BrowserDetection.isSafari()) && 'serviceWorker' in navigator) {\n    // Register service worker to strip cookie from requests\n    navigator.serviceWorker.register('/ServiceWorker.js', {\n        scope: '/',\n    }).then((reg) => {\n        console.debug(`Service worker has been registered for scope: ${reg.scope}`);\n    }).catch((error) => {\n        console.error(`Service worker installation failed`);\n        throw error;\n    });\n}\n\nVue.config.productionTip = false;\n\n// Set asset path relative to the public path defined in vue.config.json,\n// see https://cli.vuejs.org/guide/mode-and-env.html#using-env-variables-in-client-side-code\nsetVueComponentsAssetPath(`${process.env.BASE_URL}js/`, `${process.env.BASE_URL}img/`);\n\nconst rpcApi = new RpcApi(store, staticStore, router);\nVue.prototype.$rpc = rpcApi; // rpcApi is started in App.vue->created()\n\nstartSentry(Vue);\n\n// Kick off loading the language file\nsetLanguage(detectLanguage());\n\nconst app = new Vue({\n    data: { loading: true },\n    router,\n    store,\n    i18n,\n    render: (h) => h(App),\n}).$mount('#app');\n\nlet _loadingTimeout: number = -1;\nrouter.beforeEach((to, from, next) => {\n    if (_loadingTimeout === -1) {\n        // Only show loader when lazy-loading takes longer than 500ms\n        _loadingTimeout = window.setTimeout(() => app.loading = true, 500);\n    }\n    next();\n});\n\n// This router navigation guard is to prevent switching\n// to the new route before the language file finished loading.\nrouter.beforeResolve((to, from, next) => {\n    if (to.path === '/') {\n        // The root path doesn't require any translations, therefore we can continue right away. Also, this fixes what\n        // seems to be a race condition between the beforeEach in the RpcApi and this beforeResolve, see issue #422\n        next();\n        return;\n    }\n    setLanguage(detectLanguage()).then(() => next());\n});\n\nrouter.afterEach(() => {\n    window.clearTimeout(_loadingTimeout);\n    _loadingTimeout = -1;\n    app.loading = false;\n});\n\n// Types\ndeclare module 'vue/types/vue' {\n    interface Vue {\n        $rpc: RpcApi;\n    }\n}\n","import Vue from 'vue';\nimport Router from 'vue-router';\nimport { RequestType } from '@/lib/PublicRequestTypes';\nimport { KeyguardCommand } from '@nimiq/keyguard-client';\n\nconst SignTransaction         = () => import(/*webpackChunkName: \"sign-transaction\"*/ './views/SignTransaction.vue');\nconst SignTransactionSuccess  = () => import(/*webpackChunkName: \"sign-transaction\"*/\n    './views/SignTransactionSuccess.vue');\n\nconst SignTransactionLedger   = () => import(/*webpackChunkName: \"sign-transaction-ledger\"*/\n    './views/SignTransactionLedger.vue');\n\nconst CashlinkCreate          = () => import(/*webpackChunkName: \"cashlink\" */ './views/CashlinkCreate.vue');\nconst CashlinkManage          = () => import(/*webpackChunkName: \"cashlink\" */ './views/CashlinkManage.vue');\n\nconst Checkout                = () => import(/*webpackChunkName: \"checkout\"*/ './views/Checkout.vue');\nconst CheckoutTransmission    = () => import(/*webpackChunkName: \"checkout\"*/ './views/CheckoutTransmission.vue');\n\nconst ChooseAddress           = () => import(/*webpackChunkName: \"choose-address\"*/ './views/ChooseAddress.vue');\n\nconst Signup                  = () => import(/*webpackChunkName: \"onboarding\"*/ './views/Signup.vue');\nconst SignupSuccess           = () => import(/*webpackChunkName: \"onboarding\"*/ './views/SignupSuccess.vue');\n\nconst SignupLedger            = () => import(/*webpackChunkName: \"add-ledger\"*/ './views/SignupLedger.vue');\n\nconst Login                   = () => import(/*webpackChunkName: \"onboarding\"*/ './views/Login.vue');\nconst LoginSuccess            = () => import(/*webpackChunkName: \"onboarding\"*/ './views/LoginSuccess.vue');\n\nconst Export                  = () => import(/*webpackChunkName: \"export\"*/ './views/Export.vue');\nconst ExportSuccess           = () => import(/*webpackChunkName: \"export\"*/ './views/ExportSuccess.vue');\n\nconst ChangePassword          = () => import(/*webpackChunkName: \"change-password\"*/ './views/ChangePassword.vue');\n\nconst Logout                  = () => import(/*webpackChunkName: \"logout\"*/ './views/Logout.vue');\nconst LogoutSuccess           = () => import(/*webpackChunkName: \"logout\"*/ './views/LogoutSuccess.vue');\n\nconst LogoutLedger            = () => import(/*webpackChunkName: \"logout-ledger\"*/ './views/LogoutLedger.vue');\n\nconst AddAccount              = () => import(/*webpackChunkName: \"add-account\"*/ './views/AddAccount.vue');\nconst AddAccountSelection     = () => import(/*webpackChunkName: \"add-account\"*/ './views/AddAccountSelection.vue');\n\nconst AddAddressLedger        = () => import(/*webpackChunkName: \"add-ledger\"*/ './views/AddAddressLedger.vue');\n\nconst OnboardingSelector      = () => import(/*webpackChunkName: \"onboarding\"*/ './views/OnboardingSelector.vue');\n\nconst Rename                  = () => import(/*webpackChunkName: \"rename\"*/ './views/Rename.vue');\nconst AddVestingContract      = () => import(/*webpackChunkName: \"add-vesting-contract\"*/\n    './views/AddVestingContract.vue');\n\nconst Migrate                 = () => import(/*webpackChunkName: \"migrate\"*/ './views/Migrate.vue');\n\nconst SignMessage             = () => import(/*webpackChunkName: \"sign-message\"*/ './views/SignMessage.vue');\nconst SignMessageSuccess      = () => import(/*webpackChunkName: \"sign-message\"*/ './views/SignMessageSuccess.vue');\n\nconst SimpleSuccess           = () => import(/*webpackChunkName: \"common\"*/ './views/SimpleSuccess.vue');\nconst ErrorHandler            = () => import(/*webpackChunkName: \"common\"*/ './views/ErrorHandler.vue');\n\nconst RequestError            = () => import(/*webpackChunkName: \"request-error\"*/ './views/RequestError.vue');\n\nconst ErrorHandlerUnsupportedLedger = () => import(/*webpackChunkName: \"unsupported-ledger\"*/\n    './views/ErrorHandlerUnsupportedLedger.vue');\n\nconst SignBtcTransaction        = () => import(/*webpackChunkName: \"sign-btc-transaction\"*/\n    './views/SignBtcTransaction.vue');\nconst SignBtcTransactionSuccess = () => import(/*webpackChunkName: \"sign-btc-transaction\"*/\n'./views/SignBtcTransactionSuccess.vue');\n\nconst SignBtcTransactionLedger  = () => import(/*webpackChunkName: \"sign-btc-transaction-ledger\"*/\n    './views/SignBtcTransactionLedger.vue');\n\nconst ActivateBitcoin         = () => import(/*webpackChunkName: \"activate-btc\"*/ './views/ActivateBitcoin.vue');\nconst ActivateBitcoinSuccess  = () => import(/*webpackChunkName: \"activate-btc\"*/ './views/ActivateBitcoinSuccess.vue');\n\nconst ActivateBitcoinLedger = () => import(/*webpackChunkName: \"activate-btc-ledger\"*/\n    './views/ActivateBitcoinLedger.vue');\n\nconst SetupSwap               = () => import(/*webpackChunkName: \"swap\"*/ './views/SetupSwap.vue');\nconst SetupSwapSuccess        = () => import(/*webpackChunkName: \"swap\"*/ './views/SetupSwapSuccess.vue');\nconst RefundSwap              = () => import(/*webpackChunkName: \"swap\"*/ './views/RefundSwap.vue');\nconst RefundSwapSuccess       = () => import(/*webpackChunkName: \"swap\"*/ './views/RefundSwapSuccess.vue');\n\nconst SetupSwapLedger         = () => import(/*webpackChunkName: \"swap-ledger\"*/ './views/SetupSwapLedger.vue');\n\nconst RefundSwapLedger        = () => import(/*webpackChunkName: \"refund-swap-ledger\"*/ './views/RefundSwapLedger.vue');\n\nVue.use(Router);\n\nexport function keyguardResponseRouter(\n    command: KeyguardCommand,\n    originalRequestType: RequestType,\n): { resolve: string, reject: string } {\n    let resolve = '';\n    switch (command) {\n        case KeyguardCommand.CREATE:\n            resolve = `${RequestType.SIGNUP}-success`; break;\n        case KeyguardCommand.IMPORT:\n            resolve = `${RequestType.LOGIN}-success`; break;\n        case KeyguardCommand.REMOVE:\n            resolve = `${RequestType.LOGOUT}-success`; break;\n        case KeyguardCommand.SIGN_TRANSACTION:\n            // The SIGN_TRANSACTION Keyguard command is used by Hub's SIGN_TRANSACTION, CHECKOUT,\n            // CASHLINK and REFUND_SWAP. Thus we return the user to the respective handler component\n            resolve = originalRequestType === RequestType.CREATE_CASHLINK\n                ? RequestType.MANAGE_CASHLINK\n                : `${originalRequestType}-success`;\n            break;\n        case KeyguardCommand.EXPORT:\n            resolve = `${RequestType.EXPORT}-success`; break;\n        case KeyguardCommand.CHANGE_PASSWORD:\n            resolve = `${RequestType.CHANGE_PASSWORD}-success`; break;\n        case KeyguardCommand.DERIVE_ADDRESS:\n            resolve = `${RequestType.ADD_ADDRESS}-selection`; break;\n        case KeyguardCommand.SIGN_MESSAGE:\n            // The SIGN_MESSAGE Keyguard command is used by Hub's SIGN_MESSAGE and\n            // NIMIQ_ID (future). Thus we return the user to the respective handler component\n            resolve = `${originalRequestType}-success`; break;\n        case KeyguardCommand.SIGN_BTC_TRANSACTION:\n            // The SIGN_BTC_TRANSACTION Keyguard command is used by Hub's SIGN_BTC_TRANSACTION, CHECKOUT\n            // and REFUND_SWAP. Thus we return the user to the respective handler component\n            resolve = `${originalRequestType}-success`; break;\n        case KeyguardCommand.DERIVE_BTC_XPUB:\n            resolve = `${RequestType.ACTIVATE_BITCOIN}-success`; break;\n        case KeyguardCommand.SIGN_SWAP:\n            resolve = `${RequestType.SETUP_SWAP}-success`; break;\n        default:\n            throw new Error(`router.keyguardResponseRouter not defined for Keyguard command: ${command}`);\n    }\n\n    return {\n        resolve,\n        reject: 'error',\n    };\n}\n\n// Static routes names\nexport const REQUEST_ERROR = 'request-error';\nexport const ERROR = 'error';\n\nexport default new Router({\n    mode: 'history',\n    base: process.env.BASE_URL,\n    routes: [\n        {\n            path: `/${ERROR}`,\n            component: ErrorHandler,\n            name: ERROR,\n        },\n        {\n            path: `/${REQUEST_ERROR}`,\n            component: RequestError,\n            name: REQUEST_ERROR,\n        },\n        {\n            path: `/${RequestType.SIGN_TRANSACTION}`,\n            component: SignTransaction,\n            name: RequestType.SIGN_TRANSACTION,\n        },\n        {\n            path: `/${RequestType.SIGN_TRANSACTION}/success`,\n            component: SignTransactionSuccess,\n            name: `${RequestType.SIGN_TRANSACTION}-success`,\n        },\n        {\n            path: `/${RequestType.SIGN_TRANSACTION}/ledger`,\n            component: SignTransactionLedger,\n            name: `${RequestType.SIGN_TRANSACTION}-ledger`,\n        },\n        {\n            path: `/cashlink/create`,\n            component: CashlinkCreate,\n            name: RequestType.CREATE_CASHLINK,\n        },\n        {\n            path: `/cashlink/manage`,\n            component: CashlinkManage,\n            name: RequestType.MANAGE_CASHLINK,\n        },\n        {\n            path: `/${RequestType.CHECKOUT}`,\n            component: Checkout,\n            name: RequestType.CHECKOUT,\n        },\n        {\n            path: `/${RequestType.CHECKOUT}/success`,\n            component: CheckoutTransmission,\n            name: `${RequestType.CHECKOUT}-success`,\n        },\n        {\n            path: `/${RequestType.ONBOARD}`,\n            component: OnboardingSelector,\n            name: RequestType.ONBOARD,\n        },\n        {\n            path: `/${RequestType.SIGNUP}`,\n            component: Signup,\n            name: RequestType.SIGNUP,\n        },\n        {\n            path: `/${RequestType.SIGNUP}/success`,\n            component: SignupSuccess,\n            name: `${RequestType.SIGNUP}-success`,\n        },\n        {\n            path: `/${RequestType.SIGNUP}/ledger`,\n            component: SignupLedger,\n            name: `${RequestType.SIGNUP}-ledger`,\n        },\n        {\n            path: `/${RequestType.LOGIN}`,\n            component: Login,\n            name: RequestType.LOGIN,\n        },\n        {\n            path: `/${RequestType.LOGIN}/success`,\n            component: LoginSuccess,\n            name: `${RequestType.LOGIN}-success`,\n        },\n        {\n            path: `/${RequestType.EXPORT}`,\n            component: Export,\n            name: RequestType.EXPORT,\n        },\n        {\n            path: `/${RequestType.EXPORT}/success`,\n            component: ExportSuccess,\n            name: `${RequestType.EXPORT}-success`,\n        },\n        {\n            path: `/${RequestType.EXPORT}/ledger`,\n            component: ErrorHandlerUnsupportedLedger,\n            name: `${RequestType.EXPORT}-ledger`,\n        },\n        {\n            path: `/${RequestType.CHANGE_PASSWORD}`,\n            component: ChangePassword,\n            name: RequestType.CHANGE_PASSWORD,\n        },\n        {\n            path: `/${RequestType.CHANGE_PASSWORD}/success`,\n            component: SimpleSuccess,\n            name: `${RequestType.CHANGE_PASSWORD}-success`,\n        },\n        {\n            path: `/${RequestType.CHANGE_PASSWORD}/ledger`,\n            component: ErrorHandlerUnsupportedLedger,\n            name: `${RequestType.CHANGE_PASSWORD}-ledger`,\n        },\n        {\n            path: `/${RequestType.LOGOUT}`,\n            component: Logout,\n            name: RequestType.LOGOUT,\n        },\n        {\n            path: `/${RequestType.LOGOUT}/success`,\n            component: LogoutSuccess,\n            name: `${RequestType.LOGOUT}-success`,\n        },\n        {\n            path: `/${RequestType.LOGOUT}/ledger`,\n            component: LogoutLedger,\n            name: `${RequestType.LOGOUT}-ledger`,\n        },\n        {\n            path: `/${RequestType.ADD_ADDRESS}`,\n            component: AddAccount,\n            name: RequestType.ADD_ADDRESS,\n        },\n        {\n            path: `/${RequestType.ADD_ADDRESS}/selection`,\n            component: AddAccountSelection,\n            name: `${RequestType.ADD_ADDRESS}-selection`,\n        },\n        {\n            path: `/${RequestType.ADD_ADDRESS}/ledger`,\n            component: AddAddressLedger,\n            name: `${RequestType.ADD_ADDRESS}-ledger`,\n        },\n        {\n            path: `/${RequestType.RENAME}`,\n            component: Rename,\n            name: RequestType.RENAME,\n        },\n        {\n            path: `/${RequestType.ADD_VESTING_CONTRACT}`,\n            component: AddVestingContract,\n            name: RequestType.ADD_VESTING_CONTRACT,\n        },\n        {\n            path: `/${RequestType.MIGRATE}`,\n            component: Migrate,\n            name: RequestType.MIGRATE,\n        },\n        {\n            path: `/${RequestType.CHOOSE_ADDRESS}`,\n            component: ChooseAddress,\n            name: RequestType.CHOOSE_ADDRESS,\n        },\n        {\n            path: `/${RequestType.SIGN_MESSAGE}`,\n            component: SignMessage,\n            name: RequestType.SIGN_MESSAGE,\n        },\n        {\n            path: `/${RequestType.SIGN_MESSAGE}/success`,\n            component: SignMessageSuccess,\n            name: `${RequestType.SIGN_MESSAGE}-success`,\n        },\n        {\n            path: `/${RequestType.SIGN_MESSAGE}/ledger`,\n            component: ErrorHandlerUnsupportedLedger,\n            // not specifying a name here to not trigger automatic routing to this view in RpcApi.ts\n        },\n        {\n            path: `/${RequestType.SIGN_BTC_TRANSACTION}`,\n            component: SignBtcTransaction,\n            name: RequestType.SIGN_BTC_TRANSACTION,\n        },\n        {\n            path: `/${RequestType.SIGN_BTC_TRANSACTION}/success`,\n            component: SignBtcTransactionSuccess,\n            name: `${RequestType.SIGN_BTC_TRANSACTION}-success`,\n        },\n        {\n            path: `/${RequestType.SIGN_BTC_TRANSACTION}/ledger`,\n            component: SignBtcTransactionLedger,\n            name: `${RequestType.SIGN_BTC_TRANSACTION}-ledger`,\n        },\n        {\n            path: `/${RequestType.ACTIVATE_BITCOIN}`,\n            component: ActivateBitcoin,\n            name: RequestType.ACTIVATE_BITCOIN,\n        },\n        {\n            path: `/${RequestType.ACTIVATE_BITCOIN}/success`,\n            component: ActivateBitcoinSuccess,\n            name: `${RequestType.ACTIVATE_BITCOIN}-success`,\n        },\n        {\n            path: `/${RequestType.ACTIVATE_BITCOIN}/ledger`,\n            component: ActivateBitcoinLedger,\n            name: `${RequestType.ACTIVATE_BITCOIN}-ledger`,\n        },\n        {\n            path: `/${RequestType.SETUP_SWAP}`,\n            component: SetupSwap,\n            name: RequestType.SETUP_SWAP,\n        },\n        {\n            path: `/${RequestType.SETUP_SWAP}/success`,\n            component: SetupSwapSuccess,\n            name: `${RequestType.SETUP_SWAP}-success`,\n        },\n        {\n            path: `/${RequestType.SETUP_SWAP}/ledger`,\n            component: SetupSwapLedger,\n            name: `${RequestType.SETUP_SWAP}-ledger`,\n        },\n        {\n            path: `/${RequestType.REFUND_SWAP}`,\n            component: RefundSwap,\n            name: RequestType.REFUND_SWAP,\n        },\n        {\n            path: `/${RequestType.REFUND_SWAP}/success`,\n            component: RefundSwapSuccess,\n            name: `${RequestType.REFUND_SWAP}-success`,\n        },\n        {\n            path: `/${RequestType.REFUND_SWAP}/ledger`,\n            component: RefundSwapLedger,\n            name: `${RequestType.REFUND_SWAP}-ledger`,\n        },\n    ],\n});\n","module.exports = BitcoinJS;"],"sourceRoot":""}