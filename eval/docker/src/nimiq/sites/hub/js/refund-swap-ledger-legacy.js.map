{"version":3,"sources":["sources://./src/views/RefundSwap.vue","sources://./src/views/RefundSwapLedger.vue","webpack-generated:///./src/views/RefundSwapLedger.vue?1cf0","webpack-generated:///./src/views/RefundSwapLedger.vue?4df4","webpack-generated:///./src/views/RefundSwapLedger.vue?1a2f","sources://./src/lib/MerkleTreePatch.ts","sources://./src/lib/bitcoin/BitcoinHtlcUtils.ts","webpack-generated:///./src/views/RefundSwap.vue?f691","webpack:///./src/views/RefundSwap.vue?e8b4","webpack-generated:///./src/views/RefundSwapLedger.vue?da46","webpack:///./src/views/RefundSwapLedger.vue?1527","webpack-generated:///./src/views/RefundSwapLedger.vue?be40","webpack-generated:///./src/views/RefundSwapLedger.vue?42a3"],"names":[],"mappings":"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","file":"js/refund-swap-ledger-legacy.js","sourcesContent":["\nimport { Component } from 'vue-property-decorator';\nimport { Getter } from 'vuex-class';\nimport { SmallPage } from '@nimiq/vue-components';\nimport BitcoinSyncBaseView from './BitcoinSyncBaseView.vue';\nimport { BitcoinTransactionInputType } from '@nimiq/keyguard-client';\nimport StatusScreen from '../components/StatusScreen.vue';\nimport GlobalClose from '../components/GlobalClose.vue';\nimport { RequestType } from '../lib/PublicRequestTypes';\nimport {\n    ParsedRefundSwapRequest,\n    ParsedSignTransactionRequest,\n    ParsedSignBtcTransactionRequest,\n} from '../lib/RequestTypes';\nimport { Static } from '../lib/StaticStore';\nimport { WalletInfo } from '../lib/WalletInfo';\nimport { SwapAsset } from '@nimiq/fastspot-api';\n\n// Import only types to avoid bundling of KeyguardClient in Ledger request if not required.\n// (But note that currently, the KeyguardClient is still always bundled in the RpcApi).\ntype KeyguardSignNimTransactionRequest = import('@nimiq/keyguard-client').SignTransactionRequestStandard;\ntype KeyguardSignBtcTransactionRequest = import('@nimiq/keyguard-client').SignBtcTransactionRequestStandard;\n\n@Component({components: {StatusScreen, SmallPage, GlobalClose}}) // including components used in parent class\nexport default class RefundSwap extends BitcoinSyncBaseView {\n    // Can be ParsedSignTransactionRequest or ParsedSignBtcTransactionRequest in RefundSwapLedger after returning from\n    // signing via a ParsedSignTransactionRequest or ParsedSignBtcTransactionRequest.\n    @Static protected request!: ParsedRefundSwapRequest | ParsedSignTransactionRequest\n        | ParsedSignBtcTransactionRequest;\n    @Getter private findWallet!: (id: string) => WalletInfo | undefined;\n\n    protected async created() {\n        if (this.request.kind !== RequestType.REFUND_SWAP) {\n            // can happen for RefundSwapLedger and is handled there\n            return;\n        }\n\n        const request = this.request as ParsedRefundSwapRequest;\n\n        const refundInfo = request.refund;\n        const account = this.findWallet(request.walletId)!; // existence checked in RpcApi\n\n        if (refundInfo.type === SwapAsset.NIM) {\n            const { sender, recipient, value, fee, extraData: data, validityStartHeight } = refundInfo;\n            const signer = account.findSignerForAddress(recipient);\n\n            if (!signer) {\n                this.$rpc.reject(new Error(`Unknown recipient ${refundInfo.recipient}`));\n                return;\n            }\n\n            const signRequest: KeyguardSignNimTransactionRequest = {\n                appName: request.appName,\n\n                keyId: account.keyId,\n                keyLabel: account.labelForKeyguard,\n\n                keyPath: signer.path,\n                sender: sender.serialize(), // HTLC address\n                senderType: Nimiq.Account.Type.HTLC,\n                senderLabel: 'Swap HTLC',\n                // My address, must be refund address of HTLC. Send to signer as recipient might be a contract.\n                recipient: signer.address.serialize(),\n                recipientLabel: signer.label,\n                value, // Luna\n                fee, // Luna\n                data,\n                validityStartHeight,\n            };\n\n            this._signTransaction(signRequest);\n        }\n\n        if (refundInfo.type === SwapAsset.BTC) {\n            let signerKeyPath: string;\n            try {\n                // Note that the sync state will only be visible in UI if the sync is not instant (if we actually sync)\n                this.state = this.State.SYNCING;\n\n                let didDeriveAddresses = false;\n                let addressInfo = account.findBtcAddressInfo(refundInfo.refundAddress);\n                if (addressInfo instanceof Promise) {\n                    didDeriveAddresses = true;\n                    addressInfo = await addressInfo;\n                }\n                if (!addressInfo) {\n                    this.$rpc.reject(new Error(`Refund address not found: ${refundInfo.refundAddress}`));\n                    return;\n                }\n                signerKeyPath = addressInfo.path;\n\n                if (!await account.findBtcAddressInfo(refundInfo.output.address, !didDeriveAddresses)) {\n                    this.$rpc.reject(new Error(`Output address not found: ${refundInfo.output.address}`));\n                    return;\n                }\n\n                this.state = this.State.NONE;\n            } catch (e) {\n                this.state = this.State.SYNCING_FAILED;\n                this.error = e.message || e;\n                return;\n            }\n\n            const signRequest: KeyguardSignBtcTransactionRequest = {\n                appName: request.appName,\n\n                keyId: account.keyId,\n                keyLabel: account.labelForKeyguard,\n\n                inputs: [{\n                    ...refundInfo.input,\n                    keyPath: signerKeyPath,\n                    type: BitcoinTransactionInputType.HTLC_REFUND,\n                }],\n                recipientOutput: {\n                    ...refundInfo.output,\n                    label: account.label,\n                },\n            };\n\n            this._signTransaction(signRequest);\n        }\n    }\n\n    protected _signTransaction(request: KeyguardSignNimTransactionRequest | KeyguardSignBtcTransactionRequest) {\n        // Note that this method gets overwritten in RefundSwapLedger\n        const client = this.$rpc.createKeyguardClient(true);\n        if ('sender' in request) {\n            // Nimiq request\n            client.signTransaction(request);\n        } else {\n            // Bitcoin request\n            client.signBtcTransaction(request);\n        }\n    }\n}\n","\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport { Component } from 'vue-property-decorator';\nimport { Getter } from 'vuex-class';\nimport { SmallPage } from '@nimiq/vue-components';\nimport RefundSwap from './RefundSwap.vue';\nimport StatusScreen from '../components/StatusScreen.vue';\nimport GlobalClose from '../components/GlobalClose.vue';\nimport LedgerUi from '../components/LedgerUi.vue';\nimport Network from '../components/Network.vue';\nimport { loadNimiq } from '../lib/Helpers';\nimport { SwapAsset } from '@nimiq/fastspot-api';\nimport Config from 'config';\nimport {\n    RequestType,\n    SignTransactionRequest,\n    SignBtcTransactionRequest,\n    SignedTransaction,\n    SignedBtcTransaction,\n} from '../lib/PublicRequestTypes';\nimport {\n    ParsedRefundSwapRequest,\n    ParsedSignTransactionRequest,\n    ParsedSignBtcTransactionRequest,\n} from '../lib/RequestTypes';\nimport { RequestParser } from '../lib/RequestParser';\nimport staticStore, { Static } from '../lib/StaticStore';\nimport { WalletInfo } from '../lib/WalletInfo';\nimport { BTC_NETWORK_TEST } from '../lib/bitcoin/BitcoinConstants';\nimport { loadBitcoinJS } from '../lib/bitcoin/BitcoinJSLoader';\nimport { decodeBtcScript } from '../lib/bitcoin/BitcoinHtlcUtils';\nimport LedgerSwapProxy, { LedgerSwapProxyMarker } from '../lib/LedgerSwapProxy';\nimport { ERROR_CANCELED } from '../lib/Constants';\nimport patchMerkleTree from '../lib/MerkleTreePatch';\nimport { BitcoinTransactionInputType } from '@nimiq/keyguard-client';\n\n// Import only types to avoid bundling of KeyguardClient in Ledger request if not required.\n// (But note that currently, the KeyguardClient is still always bundled in the RpcApi).\ntype KeyguardSignNimTransactionRequest = import('@nimiq/keyguard-client').SignTransactionRequestStandard;\ntype KeyguardSignBtcTransactionRequest = import('@nimiq/keyguard-client').SignBtcTransactionRequestStandard;\n\n@Component({components: {StatusScreen, SmallPage, GlobalClose, LedgerUi}})\nexport default class RefundSwapLedger extends RefundSwap {\n    protected get State() {\n        return {\n            ...super.State,\n            LEDGER_HTLC_UNSUPPORTED: 'ledger-htlc-unsupported',\n        };\n    }\n\n    @Static protected request!: ParsedRefundSwapRequest | ParsedSignTransactionRequest\n        | ParsedSignBtcTransactionRequest;\n    @Static protected sideResult?: SignedTransaction | SignedBtcTransaction | Error;\n    @Getter private findWalletByAddress!: (address: string, includeContracts: boolean) => WalletInfo | undefined;\n    private ledgerInstructionsShown = false; // can happen for LedgerSwapProxy LederApi calls\n\n    protected async created() {\n        if (this.request.kind === RequestType.REFUND_SWAP) {\n            if ((this.request as ParsedRefundSwapRequest).refund.type === SwapAsset.NIM) {\n                Promise.all([\n                    // start syncing with the network for later retrieving transaction histories in LedgerSwapProxy\n                    (new Network()).getNetworkClient(),\n                    // preload nimiq cryptography used in LedgerSwapProxy, makeSignTransactionResult\n                    loadNimiq(),\n                ]).catch(() => void 0);\n            }\n\n            // first entry point into the flow is handled by the parent class which then calls _signTransaction\n            return;\n        }\n\n        // After returning from transaction signing side request\n\n        if (!this.sideResult) {\n            this.$rpc.reject(new Error('Unexpected: transaction signing did not return a side result'));\n            return;\n        } else if (this.sideResult instanceof Error) {\n            this.$rpc.reject(this.sideResult);\n            return;\n        }\n\n        if (this.request.kind === RequestType.SIGN_TRANSACTION) {\n            // Nimiq transaction\n\n            this.state = this.State.SYNCING; // proxy transaction history is synced in LedgerSwapProxy.createForRefund\n\n            const request = this.request as ParsedSignTransactionRequest;\n            const { sender: senderInfo, recipient, value, fee, data, validityStartHeight } = request;\n            const sender = senderInfo instanceof Nimiq.Address ? senderInfo : senderInfo.address;\n            // existence guaranteed as already checked previously in RefundSwap\n            const ledgerAccount = this.findWalletByAddress(recipient.toUserFriendlyAddress(), true)!;\n\n            let refundTransaction: Nimiq.Transaction;\n            try {\n                // Retrieve the proxy key for this swap from the Ledger\n                const swapProxy = await LedgerSwapProxy.createForRefund(\n                    sender,\n                    ledgerAccount.findSignerForAddress(recipient)!.path,\n                    ledgerAccount.keyId,\n                );\n\n                if (swapProxy.canSignLocally) {\n                    refundTransaction = await swapProxy.signTransaction({\n                        recipient, // Can directly send to recipient, the proxy just needs to sign.\n                        value,\n                        fee,\n                        validityStartHeight,\n                        // extraData: data, // data is the swap proxy marker which we don't want for redeeming from htlc\n                        network: Config.network,\n                        ...swapProxy.getRefundInfo(sender),\n                    });\n                } else if (sender.equals(swapProxy.address)) {\n                    // Refund from the proxy via the Ledger transaction we signed.\n                    refundTransaction = Nimiq.Transaction.fromAny(this.sideResult.serializedTx);\n                    // Convert the single sig proof of the signed transaction into the proxy multi sig proof.\n                    const {\n                        publicKey: ledgerSignerPublicKey,\n                        signature,\n                    } = Nimiq.SignatureProof.unserialize(new Nimiq.SerialBuffer(refundTransaction.proof));\n                    refundTransaction.proof = swapProxy.createSignatureProof(ledgerSignerPublicKey, signature)\n                        .serialize();\n                } else {\n                    // Refunding from the HTLC is currently not supported by the Ledger app\n                    this.state = this.State.LEDGER_HTLC_UNSUPPORTED;\n                    return;\n                }\n            } catch (e) {\n                this.$rpc.reject(e.message.toLowerCase().indexOf('cancelled') !== -1 ? new Error(ERROR_CANCELED) : e);\n                return;\n            }\n\n            if (refundTransaction.senderType === Nimiq.Account.Type.HTLC) {\n                // create htlc timeout resolve transaction proof\n                const proof = new Nimiq.SerialBuffer(1 + refundTransaction.proof.length);\n                proof.writeUint8(Nimiq.HashedTimeLockedContract.ProofType.TIMEOUT_RESOLVE);\n                proof.write(refundTransaction.proof);\n                refundTransaction.proof = proof;\n            }\n\n            // Validate that the transaction is valid\n            patchMerkleTree();\n            if (!refundTransaction.verify()) {\n                this.$rpc.reject(new Error('NIM transaction is invalid'));\n                return;\n            }\n\n            this.$rpc.resolve(await (new Network()).makeSignTransactionResult(refundTransaction));\n        } else if (this.request.kind === RequestType.SIGN_BTC_TRANSACTION) {\n            // Bitcoin transaction\n\n            if (!('serializedTx' in this.sideResult && !!this.sideResult.serializedTx)) {\n                this.$rpc.reject(new Error('Unexpected: Bitcoin transaction not signed'));\n                return;\n            }\n\n            await loadBitcoinJS(); // normally it's already loaded at this point, if user didn't reload the page.\n            const signedBitcoinTransaction = BitcoinJS.Transaction.fromHex(this.sideResult.serializedTx);\n\n            // set htlc witness for redeeming the BTC htlc\n\n            const htlcInput = signedBitcoinTransaction.ins[0];\n            // get signature and signer pub key from default witness generated by ledgerjs (see @ledgerhq/hw-app-btc\n            // createTransaction.js creation of the witness towards the end of createTransaction)\n            const [inputSignature, signerPubKey] = htlcInput.witness;\n\n            const witnessBytes = BitcoinJS.script.fromASM([\n                inputSignature.toString('hex'),\n                signerPubKey.toString('hex'),\n                'OP_0', // OP_0 (false) activates the refund branch in the HTLC script\n                (this.request as ParsedSignBtcTransactionRequest).inputs[0].witnessScript,\n            ].join(' '));\n\n            const witnessStack = BitcoinJS.script.toStack(witnessBytes);\n            signedBitcoinTransaction.setWitness(0, witnessStack);\n\n            const result: SignedBtcTransaction = {\n                serializedTx: signedBitcoinTransaction.toHex(),\n                hash: signedBitcoinTransaction.getId(),\n            };\n\n            this.$rpc.resolve(result);\n        } else {\n            this.$rpc.reject(new Error(`Unexpected request type ${this.request.kind}`));\n        }\n    }\n\n    protected async _signTransaction(request: KeyguardSignNimTransactionRequest | KeyguardSignBtcTransactionRequest) {\n        // forward to SignTransactionLedger or SignBtcTransactionLedger\n        if ('sender' in request) {\n            // Nimiq request\n            const { keyId, keyPath, sender, recipient, recipientLabel, value, fee, validityStartHeight } = request;\n            const senderAddress = new Nimiq.Address(sender);\n\n            // For Ledgers, the HTLC is currently created by a proxy address, see LedgerSwapProxy, which also needs to\n            // sign the refund transaction. The proxy accepts a local key and the Ledger as signers. Let the user\n            // confirm and sign the transaction on the Ledger which will then later be used if the local key is not\n            // available anymore. However, as the Ledger app currently can not sign HTLC transactions, we always let the\n            // user sign the proxy refund transaction instead.\n            const signTransactionRequest: SignTransactionRequest = {\n                appName: request.appName,\n                sender: senderAddress.toUserFriendlyAddress(),\n                recipient: new Nimiq.Address(recipient).toUserFriendlyAddress(),\n                recipientLabel,\n                value,\n                fee,\n                extraData: LedgerSwapProxyMarker.REDEEM,\n                validityStartHeight,\n            };\n            const parsedSignTransactionRequest = RequestParser.parse(\n                signTransactionRequest,\n                staticStore.rpcState!,\n                RequestType.SIGN_TRANSACTION,\n            ) as ParsedSignTransactionRequest;\n\n            parsedSignTransactionRequest.sender = {\n                address: senderAddress,\n                label: 'Swap HTLC',\n                // type: Nimiq.Account.Type.HTLC, // Ledgers currently can not sign actual htlc transactions\n                signerKeyId: keyId,\n                signerKeyPath: keyPath,\n            };\n\n            // redirect to SignTransactionLedger\n            staticStore.request = parsedSignTransactionRequest;\n            staticStore.originalRouteName = `${RequestType.REFUND_SWAP}-ledger`;\n            this.$router.replace({ name: `${RequestType.SIGN_TRANSACTION}-ledger` });\n        } else {\n            // Bitcoin request\n            const { walletId: accountId } = this.request as ParsedRefundSwapRequest;\n            const { appName, inputs: [htlcInput], recipientOutput: output } = request;\n\n            // Type guard to ensure inputs have a witnessScript\n            if (htlcInput.type !== BitcoinTransactionInputType.HTLC_REFUND) {\n                throw new Error('UNEXPECTED: Refund input does not have type \\'htlc-refund\\'');\n            }\n\n            this.state = this.State.SYNCING;\n            await loadBitcoinJS();\n            // note that buffer is marked as external module in vue.config.js and internally, the buffer bundled with\n            // BitcoinJS is used, therefore we retrieve it after having BitcoinJS loaded.\n            // TODO change this when we don't prebuild BitcoinJS anymore\n            const Buffer = await import('buffer').then((module) => module.Buffer);\n            const bitcoinNetwork = Config.bitcoinNetwork === BTC_NETWORK_TEST\n                ? BitcoinJS.networks.testnet\n                : BitcoinJS.networks.bitcoin;\n            const htlcAddress = BitcoinJS.address.fromOutputScript(\n                Buffer.from(Nimiq.BufferUtils.fromAny(htlcInput.outputScript)),\n                bitcoinNetwork,\n            );\n\n            // The timeoutTimestamp we parse from the BTC HTLC script is forwarded one hour\n            // (because the timeout in the script itself is set back one hour, because the BTC\n            // network only accepts locktimes that are at least one hour old). So we need to\n            // remove this added hour before using it as the transaction's locktime.\n            const { timeoutTimestamp } = await decodeBtcScript(htlcInput.witnessScript!);\n            const locktime = timeoutTimestamp - (60 * 60) + 1;\n            const sequence = 0xfffffffe; // Signal to use locktime, but do not opt into replace-by-fee\n\n            const signBtcTransactionRequest: SignBtcTransactionRequest = {\n                appName,\n                accountId,\n                inputs: [{\n                    ...htlcInput, // also includes the witnessScript\n                    sequence,\n                    address: htlcAddress,\n                }],\n                output,\n                locktime,\n            };\n            const parsedSignBtcTransactionRequest = RequestParser.parse(\n                signBtcTransactionRequest,\n                staticStore.rpcState!,\n                RequestType.SIGN_BTC_TRANSACTION,\n            ) as ParsedSignBtcTransactionRequest;\n            parsedSignBtcTransactionRequest.inputs[0].keyPath = htlcInput.keyPath;\n\n            // Redirect to SignBtcTransactionLedger\n            staticStore.request = parsedSignBtcTransactionRequest;\n            staticStore.originalRouteName = `${RequestType.REFUND_SWAP}-ledger`;\n            this.$router.replace({ name: `${RequestType.SIGN_BTC_TRANSACTION}-ledger` });\n        }\n    }\n\n    protected get statusScreenState(): StatusScreen.State {\n        if (this.state !== this.State.LEDGER_HTLC_UNSUPPORTED) return super.statusScreenState;\n        return StatusScreen.State.ERROR;\n    }\n\n    protected get statusScreenTitle() {\n        switch (this.state) {\n            case this.State.SYNCING:\n                return this.$t('Syncing') as string;\n            case this.State.LEDGER_HTLC_UNSUPPORTED:\n                return this.$t('Refund Failed') as string;\n            default:\n                return super.statusScreenTitle;\n        }\n    }\n\n    protected get statusScreenStatus() {\n        if (this.state !== this.State.SYNCING) return super.statusScreenStatus;\n        return this.$t('Syncing with {currency} network...', { currency: this._currencyName }) as string;\n    }\n\n    protected get statusScreenMessage() {\n        switch (this.state) {\n            case this.State.SYNCING_FAILED:\n                return this.$t('Syncing with {currency} network failed: {error}', {\n                    currency: this._currencyName,\n                    error: this.error,\n                }) as string;\n            case this.State.LEDGER_HTLC_UNSUPPORTED:\n                return this.$t('Refunding this Swap is currently not supported on this device or browser. Please use '\n                    + 'the device and browser you originally created the Swap with. Otherwise please try again in the '\n                    + 'future.',\n                ) as string;\n            default:\n                return super.statusScreenMessage;\n        }\n    }\n\n    protected get statusScreenAction() {\n        if (this.state !== this.State.LEDGER_HTLC_UNSUPPORTED) return super.statusScreenAction;\n        return this.$t('Ok') as string;\n    }\n\n    protected get isGlobalCloseShown() {\n        return this.request.kind === RequestType.REFUND_SWAP // before having signed\n            || this.state === this.State.SYNCING_FAILED\n            || this.state === this.State.LEDGER_HTLC_UNSUPPORTED;\n    }\n\n    private get _currencyName() {\n        switch (this.request.kind) {\n            case RequestType.SIGN_TRANSACTION: return 'Nimiq';\n            case RequestType.SIGN_BTC_TRANSACTION: return 'Bitcoin';\n            case RequestType.REFUND_SWAP:\n                const { refund: { type: currency } } = this.request as ParsedRefundSwapRequest;\n                switch (currency) {\n                    case SwapAsset.NIM: return 'Nimiq';\n                    case SwapAsset.BTC: return 'Bitcoin';\n                    default: // fall through\n                }\n            default:\n                throw new Error('Failed to determine request currency');\n        }\n    }\n\n    protected _statusScreenActionHandler() {\n        if (this.state === this.State.LEDGER_HTLC_UNSUPPORTED) {\n            this.$rpc.reject(new Error(ERROR_CANCELED));\n        } else {\n            super._statusScreenActionHandler();\n        }\n    }\n}\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _vm.state !== _vm.State.NONE\n    ? _c(\n        \"div\",\n        { staticClass: \"container\" },\n        [\n          _c(\n            \"SmallPage\",\n            [\n              _c(\"LedgerUi\", {\n                on: {\n                  \"information-shown\": function($event) {\n                    _vm.ledgerInstructionsShown = true\n                  },\n                  \"no-information-shown\": function($event) {\n                    _vm.ledgerInstructionsShown = false\n                  }\n                }\n              }),\n              _c(\n                \"transition\",\n                { attrs: { name: \"transition-fade\" } },\n                [\n                  _vm.state === _vm.State.SYNCING_FAILED ||\n                  !_vm.ledgerInstructionsShown\n                    ? _c(\"StatusScreen\", {\n                        attrs: {\n                          state: _vm.statusScreenState,\n                          title: _vm.statusScreenTitle,\n                          status: _vm.statusScreenStatus,\n                          message: _vm.statusScreenMessage,\n                          mainAction: _vm.statusScreenAction\n                        },\n                        on: { \"main-action\": _vm._statusScreenActionHandler }\n                      })\n                    : _vm._e()\n                ],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\"GlobalClose\", { attrs: { hidden: !_vm.isGlobalCloseShown } })\n        ],\n        1\n      )\n    : _vm._e()\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"\\n.small-page[data-v-2dbc2cae] {\\n    position: relative;\\n}\\n.small-page > *[data-v-2dbc2cae] {\\n    position: absolute;\\n    top: 0;\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapLedger.vue?vue&type=style&index=0&id=2dbc2cae&scoped=true&lang=css&\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3e8760c6\", content, false, {\"sourceMap\":false,\"shadowMode\":false});\n// Hot Module Replacement\nif(module.hot) {\n // When the styles change, update the <style> tags\n if(!content.locals) {\n   module.hot.accept(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapLedger.vue?vue&type=style&index=0&id=2dbc2cae&scoped=true&lang=css&\", function() {\n     var newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapLedger.vue?vue&type=style&index=0&id=2dbc2cae&scoped=true&lang=css&\");\n     if(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n     update(newContent);\n   });\n }\n // When the module is disposed, remove the <style> tags\n module.hot.dispose(function() { update(); });\n}","export default function patchMerkleTree() {\n    // Patch the Nimiq core MerkleTree class until it gets actually shipped with the Nimiq core web-offline package.\n    if (typeof Nimiq.MerkleTree !== 'undefined') {\n        console.warn('Nimiq.MerkleTree patch not required anymore and can be removed.');\n    } else {\n        type Hashable = Nimiq.Hash | Uint8Array | { hash: () => Nimiq.Hash } | { serialize: () => Uint8Array };\n\n        class MerkleTree {\n            public static computeRoot(\n                values: Hashable[],\n                fnHash = MerkleTree._hash,\n            ): Nimiq.Hash {\n                return MerkleTree._computeRoot(values, fnHash);\n            }\n\n            private static _computeRoot(values: Hashable[], fnHash: typeof MerkleTree._hash): Nimiq.Hash {\n                const len = values.length;\n                if (len === 0) {\n                    return Nimiq.Hash.light(new Uint8Array(0));\n                }\n                if (len === 1) {\n                    return fnHash(values[0]);\n                }\n\n                const mid = Math.round(len / 2);\n                const left = values.slice(0, mid);\n                const right = values.slice(mid);\n                const leftHash = MerkleTree._computeRoot(left, fnHash);\n                const rightHash = MerkleTree._computeRoot(right, fnHash);\n                return Nimiq.Hash.light(\n                    Nimiq.BufferUtils.concatTypedArrays(leftHash.serialize(), rightHash.serialize()) as Uint8Array,\n                );\n            }\n\n            private static _hash(o: Hashable): Nimiq.Hash {\n                if (o instanceof Nimiq.Hash) {\n                    return o;\n                }\n                if ('hash' in o && typeof o.hash === 'function') {\n                    return o.hash();\n                }\n                if ('serialize' in o && typeof o.serialize === 'function') {\n                    return Nimiq.Hash.light(o.serialize());\n                }\n                if (o instanceof Uint8Array) {\n                    return Nimiq.Hash.light(o);\n                }\n                throw new Error('MerkleTree objects must be Uint8Array or have a .hash()/.serialize() method');\n            }\n        }\n\n        Nimiq.MerkleTree = MerkleTree;\n    }\n}\n","import { BIP84_ADDRESS_PREFIX } from './BitcoinConstants';\nimport { loadBitcoinJS } from './BitcoinJSLoader';\nimport Config from 'config';\n\nexport async function decodeBtcScript(script: string) {\n    // note that buffer is marked as external module in vue.config.js and internally, the buffer bundled\n    // with BitcoinJS is used, therefore we retrieve it after having BitcoinJS loaded.\n    // TODO change this when we don't prebuild BitcoinJS anymore\n    await loadBitcoinJS();\n    const Buffer = await import('buffer').then((module) => module.Buffer);\n\n    const error = new Error('Invalid BTC HTLC script');\n\n    if (!script || typeof script !== 'string' || !script.length) throw error;\n    const chunks = BitcoinJS.script.decompile(Buffer.from(script, 'hex'));\n    if (!chunks) throw error;\n    const asm = BitcoinJS.script.toASM(chunks).split(' ');\n\n    let branchesVerifiedIndividually = false;\n\n    /* eslint-disable no-plusplus */\n    let i = 0;\n\n    // Start redeem branch\n    if (asm[i] !== 'OP_IF') throw error;\n\n    // Check secret size\n    if (asm[++i] !== 'OP_SIZE' || asm[++i] !== (32).toString(16) || asm[++i] !== 'OP_EQUALVERIFY') throw error;\n\n    // Check hash\n    if (asm[++i] !== 'OP_SHA256' || asm[i + 2] !== 'OP_EQUALVERIFY') throw error;\n    const hashRoot = asm[++i];\n    ++i;\n\n    // Check redeem address\n    if (asm[++i] !== 'OP_DUP' || asm[++i] !== 'OP_HASH160') throw error;\n    const redeemAddressBytes = asm[++i];\n\n    // End redeem branch, start refund branch\n    if (asm[++i] !== 'OP_ELSE') {\n        branchesVerifiedIndividually = true;\n        if (asm[i] !== 'OP_EQUALVERIFY' || asm[++i] !== 'OP_CHECKSIG' || asm[++i] !== 'OP_ELSE') throw error;\n    }\n\n    // Check timeout\n    // Bitcoin HTLC timeouts are backdated 1 hour, to account for Bitcoin's\n    // minimum age for valid transaction locktimes (6 blocks).\n    const timeoutTimestamp = BitcoinJS.script.number.decode(Buffer.from(asm[++i], 'hex')) + (60 * 60);\n    if (asm[++i] !== 'OP_CHECKLOCKTIMEVERIFY' || asm[++i] !== 'OP_DROP') throw error;\n\n    // Check refund address\n    if (asm[++i] !== 'OP_DUP' || asm[++i] !== 'OP_HASH160') throw error;\n    const refundAddressBytes = asm[++i];\n\n    // End refund branch\n    if (branchesVerifiedIndividually) {\n        if (asm[++i] !== 'OP_EQUALVERIFY' || asm[++i] !== 'OP_CHECKSIG' || asm[++i] !== 'OP_ENDIF') throw error;\n    } else {\n        // End contract\n        // eslint-disable-next-line no-lonely-if\n        if (asm[++i] !== 'OP_ENDIF' || asm[++i] !== 'OP_EQUALVERIFY' || asm[++i] !== 'OP_CHECKSIG') throw error;\n    }\n\n    if (asm.length !== ++i) throw error;\n    /* eslint-enable no-plusplus */\n\n    const refundAddress = BitcoinJS.address\n        .toBech32(Buffer.from(refundAddressBytes, 'hex'), 0, BIP84_ADDRESS_PREFIX[Config.bitcoinNetwork]);\n\n    const redeemAddress = BitcoinJS.address\n        .toBech32(Buffer.from(redeemAddressBytes, 'hex'), 0, BIP84_ADDRESS_PREFIX[Config.bitcoinNetwork]);\n\n    return {\n        refundAddress,\n        redeemAddress,\n        hashRoot,\n        timeoutTimestamp,\n    };\n}\n","var render, staticRenderFns\nimport script from \"./RefundSwap.vue?vue&type=script&lang=ts&\"\nexport * from \"./RefundSwap.vue?vue&type=script&lang=ts&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/iesiyok/projects/acc-js/development/nimiq2/hub/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('3d34e536')) {\n      api.createRecord('3d34e536', component.options)\n    } else {\n      api.reload('3d34e536', component.options)\n    }\n    \n  }\n}\ncomponent.options.__file = \"src/views/RefundSwap.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/ts-loader/index.js??ref--12-1!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwap.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/ts-loader/index.js??ref--12-1!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwap.vue?vue&type=script&lang=ts&\"","import { render, staticRenderFns } from \"./RefundSwapLedger.vue?vue&type=template&id=2dbc2cae&scoped=true&\"\nimport script from \"./RefundSwapLedger.vue?vue&type=script&lang=ts&\"\nexport * from \"./RefundSwapLedger.vue?vue&type=script&lang=ts&\"\nimport style0 from \"./RefundSwapLedger.vue?vue&type=style&index=0&id=2dbc2cae&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2dbc2cae\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/Users/iesiyok/projects/acc-js/development/nimiq2/hub/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('2dbc2cae')) {\n      api.createRecord('2dbc2cae', component.options)\n    } else {\n      api.reload('2dbc2cae', component.options)\n    }\n    module.hot.accept(\"./RefundSwapLedger.vue?vue&type=template&id=2dbc2cae&scoped=true&\", function () {\n      api.rerender('2dbc2cae', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"src/views/RefundSwapLedger.vue\"\nexport default component.exports","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/ts-loader/index.js??ref--12-1!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapLedger.vue?vue&type=script&lang=ts&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/ts-loader/index.js??ref--12-1!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapLedger.vue?vue&type=script&lang=ts&\"","import mod from \"-!../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapLedger.vue?vue&type=style&index=0&id=2dbc2cae&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/vue-style-loader/index.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapLedger.vue?vue&type=style&index=0&id=2dbc2cae&scoped=true&lang=css&\"","export * from \"-!../../node_modules/cache-loader/dist/cjs.js?{\\\"cacheDirectory\\\":\\\"node_modules/.cache/vue-loader\\\",\\\"cacheIdentifier\\\":\\\"3e5283d1-vue-loader-template\\\"}!../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./RefundSwapLedger.vue?vue&type=template&id=2dbc2cae&scoped=true&\""],"sourceRoot":""}