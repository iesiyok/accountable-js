{"version":3,"sources":["sources://./node_modules/@nimiq/ledger-api/dist/high-level-api/lazy-chunk-request-get-wallet-id-bitcoin.es.js"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyE;AACjB;AACpB;;AAEpC,wCAAwC,mEAAc;AACtD;AACA;AACA,oBAAoB,oEAAkB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,wFAAyB,EAAC;AACzC","file":"js/33-legacy.js","sourcesContent":["import { R as RequestBitcoin } from './lazy-chunk-request-bitcoin.es.js';\nimport { RequestTypeBitcoin } from './ledger-api.es.js';\nimport './lazy-chunk-request.es.js';\n\nclass RequestGetWalletIdBitcoin extends RequestBitcoin {\n    constructor(network) {\n        super();\n        this.type = RequestTypeBitcoin.GET_WALLET_ID;\n        this._coinAppConnection = null;\n        this.network = network;\n    }\n    async call(transport) {\n        this._coinAppConnection = this._coinAppConnection || await this.checkCoinAppConnection(transport);\n        return this._coinAppConnection.walletId;\n    }\n    async checkCoinAppConnection(transport) {\n        this._coinAppConnection = await super.checkCoinAppConnection(transport);\n        return this._coinAppConnection;\n    }\n    canReuseCoinAppConnection(coinAppConnection) {\n        const canReuseCoinAppConnection = super.canReuseCoinAppConnection(coinAppConnection)\n            && !!coinAppConnection.walletId;\n        if (canReuseCoinAppConnection) {\n            // Use the provided coin app connection which includes the wallet id such that checkCoinAppConnection\n            // doesn't have to be called anymore to determine the wallet id.\n            this._coinAppConnection = coinAppConnection;\n        }\n        return canReuseCoinAppConnection;\n    }\n    get _isWalletIdDerivationRequired() {\n        return true;\n    }\n}\n\nexport default RequestGetWalletIdBitcoin;\n//# sourceMappingURL=lazy-chunk-request-get-wallet-id-bitcoin.es.js.map\n"],"sourceRoot":""}